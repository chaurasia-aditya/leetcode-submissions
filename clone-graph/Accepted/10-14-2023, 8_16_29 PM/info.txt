{"id":1075377376,"question_id":133,"lang":"java","lang_name":"Java","time":"8 months, 2 weeks","timestamp":1697328989,"status":10,"status_display":"Accepted","runtime":"27 ms","url":"/submissions/detail/1075377376/","is_pending":"Not Pending","title":"Clone Graph","memory":"41.9 MB","code":"/*\n// Definition for a Node.\nclass Node {\n    public int val;\n    public List<Node> neighbors;\n    public Node() {\n        val = 0;\n        neighbors = new ArrayList<Node>();\n    }\n    public Node(int _val) {\n        val = _val;\n        neighbors = new ArrayList<Node>();\n    }\n    public Node(int _val, ArrayList<Node> _neighbors) {\n        val = _val;\n        neighbors = _neighbors;\n    }\n}\n*/\n\nclass Solution {\n    public void dfs(Node res, Node cur, Node[] visited){\n        if(cur == null)\n            return;\n        visited[res.val] = res;\n\n        for(Node n: cur.neighbors){\n            if(visited[n.val]==null)\n            {\n                Node nn = new Node(n.val);\n                res.neighbors.add(nn);\n                dfs(nn, n, visited);\n            }else{\n                res.neighbors.add(visited[n.val]);\n            }\n        }\n    }\n    public Node cloneGraph(Node node) {\n        if(node == null)\n            return null;\n        Node[] visited = new Node[101];\n        // visited = new HashMap<>();\n        Node res = new Node(node.val);\n        dfs(res, node, visited);\n        return res;\n    }\n}","compare_result":"1111111111111111111111","title_slug":"clone-graph","has_notes":false,"flag_type":1}