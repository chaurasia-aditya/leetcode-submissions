{"id":1075360244,"question_id":133,"lang":"java","lang_name":"Java","time":"8 months, 2 weeks","timestamp":1697326006,"status":10,"status_display":"Accepted","runtime":"26 ms","url":"/submissions/detail/1075360244/","is_pending":"Not Pending","title":"Clone Graph","memory":"41.4 MB","code":"/*\n// Definition for a Node.\nclass Node {\n    public int val;\n    public List<Node> neighbors;\n    public Node() {\n        val = 0;\n        neighbors = new ArrayList<Node>();\n    }\n    public Node(int _val) {\n        val = _val;\n        neighbors = new ArrayList<Node>();\n    }\n    public Node(int _val, ArrayList<Node> _neighbors) {\n        val = _val;\n        neighbors = _neighbors;\n    }\n}\n*/\n\nclass Solution {\n    HashMap<Integer, Node> visited;\n    public void dfs(Node res, Node cur){\n        if(cur == null)\n            return;\n        visited.put(res.val, res);\n\n        for(int i=0;i<cur.neighbors.size();i++){\n            // System.out.println(\"i = \"+i);\n            // Node add = visited.getOrDefault(cur.neighbours.get(i).val, );\n            if(!visited.containsKey(cur.neighbors.get(i).val))\n            {\n                res.neighbors.add(new Node(cur.neighbors.get(i).val));\n                dfs(res.neighbors.get(i), cur.neighbors.get(i));\n            }else{\n                res.neighbors.add(visited.get(cur.neighbors.get(i).val));\n            }\n        }\n        return;\n    }\n    public Node cloneGraph(Node node) {\n        if(node == null)\n            return null;\n        visited = new HashMap<>();\n        Node res = new Node(node.val);\n        dfs(res, node);\n        return res;\n    }\n}","compare_result":"1111111111111111111111","title_slug":"clone-graph","has_notes":false,"flag_type":1}