{"id":1071247067,"question_id":128,"lang":"java","lang_name":"Java","time":"8 months, 2 weeks","timestamp":1696881257,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/1071247067/","is_pending":"Not Pending","title":"Longest Consecutive Sequence","memory":"56.6 MB","code":"class Solution {\n    public int longestConsecutive(int[] nums) {\n        // HashMap<Integer, Integer> hm = new HashMap<Integer, Integer>();\n        // int low, high, cur_len, res = 0;\n        // for (int n : nums) {\n        //     if (!hm.containsKey(n)) {\n        //         low = hm.getOrDefault(n-1, 0);\n        //         high = hm.getOrDefault(n+1, 0);\n\n        //         cur_len = low + high + 1;\n        //         hm.put(n, cur_len);\n        //         res = Math.max(res, cur_len);\n\n        //         hm.put(n - low, cur_len);\n        //         hm.put(n + high, cur_len);\n        //     }\n        //     else {\n        //         continue;\n        //     }\n        // }\n        if(nums.length == 0)\n            return 0;\n        int max = Integer.MIN_VALUE, min = Integer.MAX_VALUE;\n        int cur = 0, res = 0;\n        if (nums.length < 1000) {\n            Arrays.sort(nums);\n            for (int i = 1; i < nums.length; i++) {\n                if (nums[i] != nums[i - 1]) {\n                    if (nums[i] == nums[i-1]+1) {\n                        cur++;\n                    } else {\n                        res = Math.max(res, cur+1);\n                        cur = 0;\n                    }\n                }\n            }\n            res = Math.max(res, cur+1);\n            return res;\n        }\n        for (int num : nums) {\n            max = Math.max(num, max);\n            min = Math.min(num, min);\n        }\n        boolean[] exists = new boolean[max + 1 - min];\n        for (int num : nums) {\n            exists[num - min] = true;\n        }\n        for (boolean i : exists) {\n            if (i) {\n                cur++;\n                res = Math.max(res, cur);\n            } else {\n                cur = 0;\n            }\n        }\n        return res;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-consecutive-sequence","has_notes":false,"flag_type":1}