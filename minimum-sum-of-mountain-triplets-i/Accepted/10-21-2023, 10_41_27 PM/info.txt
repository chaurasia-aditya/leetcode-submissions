{"id":1080988815,"question_id":3176,"lang":"java","lang_name":"Java","time":"8 months, 1 week","timestamp":1697942487,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1080988815/","is_pending":"Not Pending","title":"Minimum Sum of Mountain Triplets I","memory":"40.9 MB","code":"class Solution {\n    public int minimumSum(int[] nums) {\n        int min = nums[0];\n        int min2 = Integer.MAX_VALUE;\n        int res = -1;\n        for(int j=1;j<nums.length-1;j++){\n            min = Math.min(min, nums[j-1]);\n            min2 = Integer.MAX_VALUE;\n            if(min>=nums[j]){\n                continue;\n            }\n            for(int k = j+1;k<nums.length;k++){\n                if(nums[k]<nums[j]){\n                    min2 = Math.min(min2, nums[k]);\n                }\n            }\n            if(min2 >= nums[j]){\n                continue;\n            }\n            if(res == -1){\n                res = min+min2+nums[j];\n            }\n            else{\n                res = Math.min(res, min+min2+nums[j]);\n            }\n        }\n        return res;\n    }\n}","compare_resulttitle_slug":"minimum-sum-of-mountain-triplets-i","has_notes":false,"flag_type":1}