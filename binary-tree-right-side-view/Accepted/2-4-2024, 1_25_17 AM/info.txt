{"id":1165581082,"question_id":199,"lang":"java","lang_name":"Java","time":"4 months, 3 weeks","timestamp":1707027917,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1165581082/","is_pending":"Not Pending","title":"Binary Tree Right Side View","memory":"41.5 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public void dfs(TreeNode cur, List<Integer> res, int level){\n        if(cur == null)\n            return;\n        if(res.size() == level){    \n            res.add(cur.val);\n        }\n\n        dfs(cur.right, res, level+1);\n        dfs(cur.left, res, level+1);\n    }\n    public List<Integer> rightSideView(TreeNode root) {\n        List<Integer> res = new ArrayList<>();\n        dfs(root, res, 0);\n        return res;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-right-side-view","has_notes":false,"flag_type":1}