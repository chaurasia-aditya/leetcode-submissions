{"id":1074594991,"question_id":199,"lang":"java","lang_name":"Java","time":"8 months, 2 weeks","timestamp":1697236896,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1074594991/","is_pending":"Not Pending","title":"Binary Tree Right Side View","memory":"41.3 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public List<Integer> rightSideView(TreeNode root) {\n        List<Integer> res = new ArrayList<>();\n\n        if (root == null)\n            return res;\n\n        Queue<TreeNode> level = new LinkedList();\n        level.offer(root);\n        \n        while(!level.isEmpty()){\n            int size = level.size();\n            \n            while (size-->0){\n                TreeNode cur = level.poll();\n                if (size == 0)\n                    res.add(cur.val);\n                \n                if (cur.left != null)\n                    level.offer(cur.left);\n                if (cur.right != null)\n                    level.offer(cur.right);\n            }\n        }\n        \n        return res;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-right-side-view","has_notes":false,"flag_type":1}