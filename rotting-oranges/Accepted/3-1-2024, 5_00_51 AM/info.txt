{"id":1190506269,"question_id":1036,"lang":"java","lang_name":"Java","time":"3 months, 3 weeks","timestamp":1709287251,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1190506269/","is_pending":"Not Pending","title":"Rotting Oranges","memory":"42.4 MB","code":"class Solution {\n    class Pair{\n        int r;\n        int c;\n        Pair(int r,int c){\n            this.r=r;\n            this.c=c;\n        }\n    }\n\n    public int orangesRotting(int[][] grid) {\n        int res = 0;\n        int m = grid.length;\n        int n = grid[0].length;\n        // cost = new int[m][n];\n\n        // for(int i=0;i<m;i++){\n        //     for(int j=0;j<n;j++){\n        //         if(grid[i][j] == 2){\n        //             continue;\n        //         }\n        //         cost[i][j] = Integer.MAX_VALUE;\n        //     }\n        // }\n\n        Queue<Pair> rotten = new LinkedList<>();\n        for(int i=0;i<m;i++){\n            for(int j=0;j<n;j++){\n                if(grid[i][j]==2) \n                    rotten.add(new Pair(i,j));\n            }\n        }\n\n        while(!rotten.isEmpty()){\n            int round = rotten.size();\n            boolean change = false;\n            while(round-->0){\n                Pair cur = rotten.poll();\n                int r=cur.r, c=cur.c;\n\n                if(r>0 && grid[r-1][c]==1){\n                    grid[r-1][c]=2;\n                    rotten.add(new Pair(r-1,c));\n                    change = true;\n                }\n                if(r<m-1 && grid[r+1][c]==1){\n                    grid[r+1][c]=2;\n                    rotten.add(new Pair(r+1,c));\n                    change = true;\n                }\n                if(c>0 && grid[r][c-1]==1){\n                    grid[r][c-1]=2;\n                    rotten.add(new Pair(r,c-1));\n                    change = true;\n                }\n                if(c<n-1 && grid[r][c+1]==1){\n                    grid[r][c+1]=2;\n                    rotten.add(new Pair(r,c+1));\n                    change = true;\n                }\n            }\n            if(change){\n                res++;\n            }\n        }\n        for(int i=0;i<m;i++){\n            for(int j=0;j<n;j++){\n                if(grid[i][j] == 1)\n                    return -1;\n            }\n        }\n\n        return res;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"rotting-oranges","has_notes":false,"flag_type":1}