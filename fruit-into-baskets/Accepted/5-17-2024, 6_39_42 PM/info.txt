{"id":1260892781,"question_id":940,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1715985582,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/1260892781/","is_pending":"Not Pending","title":"Fruit Into Baskets","memory":"54.7 MB","code":"class Solution {\n    public int totalFruit(int[] fruits) {\n//         int max = 0;\n//         int f = fruits[0], f_last = 0, f_count = 1;\n//         int s = -1, s_last = -1, s_count = 0;;\n        \n//         for(int i=1;i<fruits.length;i++){\n//             // System.out.println(\"i=\"+i+\" f=\"+f+\" f_last=\"+f_last+\" f_count=\"+f_count+\" s=\"+s+\" s_last=\"+s_last+\" s_count=\"+s_count+\" max =\"+max);\n//             if(fruits[i] == f){\n//                 f_count++;\n//                 f_last = i;\n//             }else if(fruits[i] == s){\n//                 s_count++;\n//                 s_last = i;\n//             }else if(f == -1){\n//                 f = fruits[i];\n//                 f_count=1;\n//                 f_last = i;\n//             } else if(s == -1){\n//                 s = fruits[i];\n//                 s_count=1;\n//                 s_last = i;\n//             }else{\n//                 max = Math.max(f_count+s_count, max);\n//                 if(f_last<s_last){\n//                     f = s;\n//                     f_last=s_last;\n//                 }\n//                 f_count = (i-f_last);\n//                 s = fruits[i];\n//                 s_last = i;\n//                 s_count = 1;\n//             }\n//         }\n//         max = Math.max(f_count+s_count, max);\n        \n//         return max;\n        \n        int max = 0;\n        int curMax = 0;\n        int prev = -1;\n        int prev2 = -1;\n        int prevCount = 0;\n\n        for (int fruit: fruits) {\n            if (fruit == prev || fruit == prev2) {\n                curMax++;\n            } else {\n                max = Math.max(max, curMax);\n                curMax = prevCount + 1;\n            }\n            if (fruit == prev) {\n                prevCount++;\n            } else {\n                prevCount = 1;\n                prev2 = prev;\n                prev = fruit;\n            }\n        }\n        return Math.max(max, curMax);\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"fruit-into-baskets","has_notes":false,"flag_type":1}