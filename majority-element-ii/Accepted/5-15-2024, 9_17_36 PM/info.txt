{"id":1259176721,"question_id":229,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1715822256,"status":10,"status_display":"Accepted","runtime":"10 ms","url":"/submissions/detail/1259176721/","is_pending":"Not Pending","title":"Majority Element II","memory":"45.5 MB","code":"import java.util.Map.Entry;\nclass Solution {\n    public List<Integer> majorityElement(int[] nums) {\n        int n = nums.length;\n        int x = n/3;\n        \n        HashMap<Integer, Integer> hm = new HashMap<>();\n        int[] count = new int[50001];\n        int index = 0;\n        \n        for(int i=0;i<n;i++){\n            if(hm.containsKey(nums[i]) == false){\n                hm.put(nums[i], index);\n                count[index] = 1;\n                index++;\n            }else{\n                count[hm.get(nums[i])]++;\n            }\n        }\n        \n        List<Integer> res = new ArrayList<>();\n        \n        for(Entry<Integer, Integer> e: hm.entrySet()){\n            if(count[e.getValue()] > x)\n                    res.add(e.getKey());\n        }\n        \n        return res;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"majority-element-ii","has_notes":false,"flag_type":1}