{"id":1272189514,"question_id":64,"lang":"java","lang_name":"Java","time":"3 weeks, 5 days","timestamp":1717058446,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1272189514/","is_pending":"Not Pending","title":"Minimum Path Sum","memory":"45.2 MB","code":"class Solution {\n    public int minPathSum(int[][] grid) {\n        int m = grid.length;\n        int n = grid[0].length;\n        int[][] dp = new int[m][n];\n\n        dp[m-1][n-1] = grid[m-1][n-1];\n        \n        for(int i = m-2;i>=0;i--)\n            dp[i][n-1] = dp[i+1][n-1]+grid[i][n-1];\n\n        for(int j = n-2;j>=0;j--)\n            dp[m-1][j] = dp[m-1][j+1]+grid[m-1][j];\n\n        for(int i = m-2;i>=0;i--){\n            for(int j = n-2;j>=0;j--){\n                dp[i][j] = Math.min(dp[i+1][j], dp[i][j+1])+grid[i][j];\n            }\n        }\n\n        return dp[0][0];\n\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-path-sum","has_notes":false,"flag_type":1}