{"id":1263682977,"question_id":744,"lang":"java","lang_name":"Java","time":"1Â month","timestamp":1716268430,"status":10,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/1263682977/","is_pending":"Not Pending","title":"Network Delay Time","memory":"48.9 MB","code":"class Solution {\n    int MAX = 100*100*6000;\n    class Pair{\n        int dest, weight;\n        \n        public Pair(int d, int w){\n            dest = d;\n            weight = w;\n        }\n    }\n    public int networkDelayTime(int[][] times, int n, int k) {        \n        List<List<Pair>> al = new ArrayList<>();\n \n        for (int i = 0; i < n; i++) {\n            al.add(new ArrayList<>());\n        }\n                \n        for(int i=0;i<times.length;i++){\n            al.get(times[i][0]-1).add(new Pair(times[i][1]-1, times[i][2]));\n        }\n        \n        int[] dist = new int[n];\n\n        boolean[] visited = new boolean[n];\n        for (int i = 0; i < n; i++) {\n            visited[i] = false;\n            dist[i] = MAX;\n        }\n        \n        dist[k-1] = 0;\n        int cur = k-1;\n\n        Set<Integer> hs = new HashSet<>();\n        while (true) {\n            visited[cur] = true;\n            for (int i = 0; i < al.get(cur).size(); i++) {\n                int v = al.get(cur).get(i).dest;\n \n                if (visited[v])\n                    continue;\n\n                hs.add(v);\n                int newdist = dist[cur] + al.get(cur).get(i).weight;\n\n                if (newdist < dist[v]) {\n                    dist[v] = newdist;\n                }\n            }\n            hs.remove(cur);\n \n            if (hs.isEmpty())\n                break;\n \n            int minDist = MAX;\n\n            for (int a : hs) {\n                if (dist[a] < minDist) {\n                    minDist = dist[a];\n                    cur = a;\n                }\n            }\n        }\n        \n        int max = -1;\n        \n        for(int i:dist){\n            if(i>=MAX)\n                return -1;\n            max=Math.max(i, max);\n        }\n        \n        return max;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111","title_slug":"network-delay-time","has_notes":false,"flag_type":1}