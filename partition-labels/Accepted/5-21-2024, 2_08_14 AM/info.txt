{"id":1263723980,"question_id":768,"lang":"java","lang_name":"Java","time":"1Â month","timestamp":1716271694,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/1263723980/","is_pending":"Not Pending","title":"Partition Labels","memory":"42 MB","code":"class Solution {\n    public List<Integer> partitionLabels(String s) {\n        int[] st = new int[26];\n        int[] end = new int[26];\n        int n = s.length();\n        \n        Arrays.fill(st, -1);\n        Arrays.fill(end, -1);\n        \n        for(int i=0;i<n;i++){\n            char ch = s.charAt(i);\n            \n            if(st[ch-'a'] == -1)\n                st[ch - 'a'] = i;\n            end[ch-'a'] = i;\n        }\n        \n        List<Integer> res = new ArrayList<>();\n        \n        int beg = -1;\n        int ending = -1;\n        \n        for(int i=0;i<n;i++){\n            if(beg == -1){\n                beg = i;\n            }\n            ending = Math.max(ending, end[s.charAt(i)-'a']);\n            \n            if(i == ending){\n                res.add(ending-beg+1);\n                beg = -1;\n            }\n        }\n        \n        return res;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"partition-labels","has_notes":false,"flag_type":1}