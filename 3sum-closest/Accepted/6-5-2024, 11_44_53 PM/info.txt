{"id":1279063903,"question_id":16,"lang":"java","lang_name":"Java","time":"2 weeks, 5 days","timestamp":1717645493,"status":10,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/1279063903/","is_pending":"Not Pending","title":"3Sum Closest","memory":"43.5 MB","code":"class Solution {\n    public int threeSumClosest(int[] nums, int target) {\n        int n = nums.length;\n        Arrays.sort(nums);\n\n        int low, high, sum;\n        int cur_diff = Integer.MAX_VALUE, cur_close = 0;\n        \n        \n        for(int i=0;i<n-2;i++){\n            if(i>0 && nums[i]==nums[i-1])\n                continue;\n            low = i+1;\n            high = n-1;\n\n            while(low<high){\n                sum = nums[i]+nums[low]+nums[high];\n                if(sum==target){\n                    return sum;\n                }else if(sum<target){\n                    low++;\n                    while(low<high && nums[low]==nums[low-1])\n                        low++;\n                }else{\n                    high--;\n                    while(high>low && nums[high]==nums[high+1])\n                        high--;\n                }\n                int diff = Math.abs(sum-target);\n                if(diff<cur_diff){\n                    cur_diff = diff;\n                    cur_close = sum;\n                }\n            }\n        }\n        \n        return cur_close;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"3sum-closest","has_notes":false,"flag_type":1}