{"id":1271086551,"question_id":747,"lang":"java","lang_name":"Java","time":"3 weeks, 6 days","timestamp":1716961349,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1271086551/","is_pending":"Not Pending","title":"Min Cost Climbing Stairs","memory":"42.8 MB","code":"class Solution {\n    public int minCostClimbingStairs(int[] cost) {\n        int n = cost.length;\n        \n        int[] dp = new int[n+2];\n        Arrays.fill(dp, Integer.MAX_VALUE);\n                    \n        dp[0] = 0;\n        dp[1] = 0;\n        \n        for(int i=0;i<n;i++){\n            dp[i]+=cost[i];\n            dp[i+1] = Math.min(dp[i+1], dp[i]);\n            dp[i+2] = Math.min(dp[i+2], dp[i]);\n            \n            \n        }\n        \n        return dp[n];\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"min-cost-climbing-stairs","has_notes":false,"flag_type":1}