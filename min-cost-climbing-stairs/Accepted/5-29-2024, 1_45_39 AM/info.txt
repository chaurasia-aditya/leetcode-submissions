{"id":1271089143,"question_id":747,"lang":"java","lang_name":"Java","time":"3 weeks, 6 days","timestamp":1716961539,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1271089143/","is_pending":"Not Pending","title":"Min Cost Climbing Stairs","memory":"43.4 MB","code":"class Solution {\n    public int minCostClimbingStairs(int[] cost) {\n        int n = cost.length;\n        \n        int[] dp = new int[n];\n                    \n        dp[0] = cost[0];\n        dp[1] = cost[1];\n        \n        for(int i=2;i<n;i++){\n            dp[i] = Math.min(dp[i-1], dp[i-2])+cost[i];\n        }\n        \n        return Math.min(dp[n-1], dp[n-2]);\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"min-cost-climbing-stairs","has_notes":false,"flag_type":1}