{"id":1254550871,"question_id":42,"lang":"java","lang_name":"Java","time":"1 month, 2 weeks","timestamp":1715358788,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1254550871/","is_pending":"Not Pending","title":"Trapping Rain Water","memory":"45.7 MB","code":"class Solution {\n    public int trap(int[] height) {\n        int n = height.length;\n        if(n == 0)\n            return 0;\n        \n        int[] left = new int[n];\n        int[] right = new int[n];\n        int res = 0;\n\n        left[0] = height[0];\n        for(int i=1;i<n;i++){\n            left[i] = Math.max(left[i-1], height[i]);\n        }\n\n        right[n-1] = height[n-1];\n        for(int i=n-2;i>=0;i--){\n            right[i] = Math.max(right[i+1], height[i]);\n        }\n\n        for(int i=0;i<n;i++){\n            res += Math.min(left[i], right[i]) - height[i];\n        }\n\n        return res;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"trapping-rain-water","has_notes":false,"flag_type":1}