{"id":1118607176,"question_id":3234,"lang":"java","lang_name":"Java","time":"6 months, 2 weeks","timestamp":1702448925,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1118607176/","is_pending":"Not Pending","title":"Double Modular Exponentiation","memory":"44 MB","code":"class Solution {\n    public static long powerModulo(long base, long exponent, long modulus) {\n        long result = 1;\n        // base = base % modulus;  // Take modulo of base to handle large bases\n\n        while (exponent > 0) {\n            if (exponent % 2 == 1) {\n                result = (result * base) % modulus;\n            }\n            exponent = exponent / 2;\n            base = (base * base) % modulus;\n        }\n\n        return result;\n    }\n    \n    public List<Integer> getGoodIndices(int[][] variables, int target) {\n        List<Integer> res = new LinkedList<>();\n        \n        List<List<Integer>> last = new ArrayList<>();\n        \n        last.add(Arrays.asList(0));\n        last.add(Arrays.asList(1));\n        last.add(Arrays.asList(2,4,8,6));\n        last.add(Arrays.asList(3,9,7,1));\n        last.add(Arrays.asList(4,6));\n        last.add(Arrays.asList(5));\n        last.add(Arrays.asList(6));\n        last.add(Arrays.asList(7,9,3,1));\n        last.add(Arrays.asList(8,4,2,6));\n        last.add(Arrays.asList(9,1));\n        \n        for(int i=0;i<variables.length;i++){\n            int a = variables[i][0]%10;\n            // System.out.print(a+\" \");\n            int x = last.get(a).get((variables[i][1]-1)%last.get(a).size());//a^b%10\n            // System.out.print(x+\" \");\n            \n            String c = String.valueOf(variables[i][2]);\n            // System.out.print(c+\" \");\n            \n            long m = variables[i][3];\n            \n            long z = powerModulo(x, variables[i][2], m);\n\n            // System.out.println(z);\n            \n            if(z == target){\n                res.add(i);\n            }\n        }\n        return res;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"double-modular-exponentiation","has_notes":false,"flag_type":1}