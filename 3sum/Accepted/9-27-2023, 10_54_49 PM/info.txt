{"id":1061009337,"question_id":15,"lang":"java","lang_name":"Java","time":"9Â months","timestamp":1695869689,"status":10,"status_display":"Accepted","runtime":"43 ms","url":"/submissions/detail/1061009337/","is_pending":"Not Pending","title":"3Sum","memory":"50.5 MB","code":"class Solution {\n    public List<List<Integer>> threeSum(int[] nums) {\n        List<List<Integer>> res = new ArrayList<>();\n        int n = nums.length;\n        int low, high, req, cur;\n        boolean lloop = false, hloop = false;\n        Arrays.sort(nums);\n\n        for(int i=0;i<n-2;i++){\n            if(i>0 && nums[i]== nums[i-1])\n                continue;\n            low = i+1;\n            high = n-1;\n            req = -nums[i];\n            while(low<high){\n                cur = nums[low]+nums[high];\n                if(cur<req){\n                    lloop = true;\n                }else if(cur>req){\n                    hloop = true;\n                }else{\n                    res.add(Arrays.asList(nums[i], nums[low], nums[high]));\n                    lloop = true;\n                    hloop = true;\n                }\n                if(lloop){\n                    while(low<high && nums[low+1] == nums[low])\n                        low++;\n                    low++;\n                    lloop = false;\n                }\n                if(hloop){\n                    while(high>low && nums[high-1] == nums[high])\n                        high--;\n                    high--;\n                    hloop = false;\n                }\n            }\n        }\n        return res;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"3sum","has_notes":false,"flag_type":1}