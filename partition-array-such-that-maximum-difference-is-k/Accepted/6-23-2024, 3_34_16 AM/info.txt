{"id":1297525785,"question_id":2387,"lang":"java","lang_name":"Java","time":"2 days, 18 hours","timestamp":1719128056,"status":10,"status_display":"Accepted","runtime":"30 ms","url":"/submissions/detail/1297525785/","is_pending":"Not Pending","title":"Partition Array Such That Maximum Difference Is K","memory":"56.4 MB","code":"class Solution {\n    public int partitionArray(int[] nums, int k) {\n        Arrays.sort(nums);\n        int count = 0;\n\n        int min = nums[0];\n\n        for(int i=1;i<nums.length;i++){\n            if(nums[i]-min>k){\n                count++;\n                min = nums[i];\n            }\n        }\n\n        return count+1;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"partition-array-such-that-maximum-difference-is-k","has_notes":false,"flag_type":1}