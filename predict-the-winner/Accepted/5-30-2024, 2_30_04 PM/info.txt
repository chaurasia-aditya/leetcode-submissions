{"id":1272637552,"question_id":486,"lang":"java","lang_name":"Java","time":"3Â weeks, 5Â days","timestamp":1717093804,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1272637552/","is_pending":"Not Pending","title":"Predict the Winner","memory":"40.7 MB","code":"class Solution {\n    int getMax(int st, int end, int[] nums, int[][] dp){\n        if(st>end)\n            return 0;\n        \n        if(dp[st][end]!=-1)\n            return dp[st][end];\n\n        int takeFirst = nums[st] + Math.min(getMax(st+1, end-1, nums, dp), getMax(st+2, end, nums, dp));\n        int takeLast = nums[end] + Math.min(getMax(st+1, end-1, nums, dp), getMax(st, end-2, nums, dp));\n\n        dp[st][end] = Math.max(takeFirst, takeLast);\n        return dp[st][end];\n    }\n\n    public boolean predictTheWinner(int[] nums) {\n        int n = nums.length;\n        int total = 0;\n        int[][] dp = new int[n][n];\n\n        for(int[] i: dp)\n            Arrays.fill(i, -1);\n\n        for(int i=0;i<n;i++){\n            total+=nums[i];\n            dp[i][i] = nums[i];\n        }\n\n        int max = getMax(0, n-1, nums, dp);\n\n        return max>=total-max;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111","title_slug":"predict-the-winner","has_notes":false,"flag_type":1}