{"id":1081169928,"question_id":1250,"lang":"java","lang_name":"Java","time":"8 months, 1 week","timestamp":1697958012,"status":10,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/1081169928/","is_pending":"Not Pending","title":"Longest Common Subsequence","memory":"48.8 MB","code":"class Solution {\n    public int longestCommonSubsequence(String text1, String text2) {\n        int l1 = text1.length();\n        int l2 = text2.length();\n        int[][] sub = new int[l1+1][l2+1];\n\n        for(int i=0;i<l1;i++){\n            for(int j=0;j<l2;j++){\n                if(text1.charAt(i) == text2.charAt(j)){\n                    sub[i+1][j+1] = sub[i][j]+1;\n                }else{\n                    sub[i+1][j+1] = Math.max(sub[i][j+1], sub[i+1][j]);\n                }\n                // sub[i+1][j+1] = Math.max(sub[i][j+1], sub[i+1][j])+(text1.charAt(i)==text2.charAt(j)?1:0);\n            }\n        }\n        return sub[l1][l2];\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111","title_slug":"longest-common-subsequence","has_notes":false,"flag_type":1}