{"id":1080444319,"question_id":62,"lang":"java","lang_name":"Java","time":"8 months, 1 week","timestamp":1697875351,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1080444319/","is_pending":"Not Pending","title":"Unique Paths","memory":"39 MB","code":"class Solution {\n    public int uniquePaths(int m, int n) {\n        if(m == 1 || n==1){\n            return 1;\n        }\n        int[][] paths = new int[m+1][n+1];\n        paths[1][1] = 0;\n        paths[2][1] = 1;\n        paths[1][2] = 1;\n\n        for(int i=0;i<=m;i++){\n            paths[i][0] = 0;\n        }\n\n        for(int j=0;j<=n;j++){\n            paths[0][j] = 0;\n        }\n\n        for(int i = 1;i<=m;i++){\n            for(int j=1;j<=n;j++){\n                paths[i][j] += paths[i-1][j] + paths[i][j-1];\n            }\n        }\n        return paths[m][n];\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111","title_slug":"unique-paths","has_notes":false,"flag_type":1}