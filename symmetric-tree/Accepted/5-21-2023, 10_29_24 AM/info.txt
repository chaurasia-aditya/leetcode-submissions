{"id":954547913,"question_id":101,"lang":"java","lang_name":"Java","time":"1 year, 1 month","timestamp":1684679364,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/954547913/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"40.8 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean compare(TreeNode left, TreeNode right){\n        if(left == null && right == null)\n            return true;\n        if(left == null || right == null)\n            return false;\n        if(left.val == right.val && compare(left.left, right.right) && compare(left.right, right.left))\n            return true;\n        return false;\n    }\n    public boolean isSymmetric(TreeNode root) {\n        return compare(root.left, root.right);\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"symmetric-tree","has_notes":false,"flag_type":1}