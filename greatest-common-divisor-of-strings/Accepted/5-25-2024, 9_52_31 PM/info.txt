{"id":1267976528,"question_id":1146,"lang":"java","lang_name":"Java","time":"1Â month","timestamp":1716688351,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/1267976528/","is_pending":"Not Pending","title":"Greatest Common Divisor of Strings","memory":"45.1 MB","code":"class Solution {\n    int gcd(int a, int b){\n        if(a == 0)\n            return b;\n        if(b == 0)\n            return a;\n        if(a == b)\n            return a;\n        if(a>b)\n            return gcd(a-b, b);\n        return gcd(a, b-a);\n    }\n    public String gcdOfStrings(String str1, String str2) {\n        int l1 = str1.length();\n        int l2 = str2.length();\n        \n        if(l1 == 0 || l2 == 0)\n            return \"\";\n        \n        int len = gcd(l1, l2);\n        \n        String res = \"\";\n        \n        for(int i = 0; i<len; i++){\n            String cur1 = str1.substring(0, i+1);\n            String cur2 = str2.substring(0, i+1);\n            \n            if(!cur1.equals(cur2) || (l1%(i+1))!=0 || (l2%(i+1))!=0){\n                continue;\n            }\n            \n            if(cur1.repeat(l1/(i+1)).equals(str1) && cur2.repeat(l2/(i+1)).equals(str2)){\n                res = cur1;\n            }\n        }\n        \n        return res;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"greatest-common-divisor-of-strings","has_notes":false,"flag_type":1}