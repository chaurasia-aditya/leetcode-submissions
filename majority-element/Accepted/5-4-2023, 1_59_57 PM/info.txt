{"id":944507531,"question_id":169,"lang":"java","lang_name":"Java","time":"1 year, 1 month","timestamp":1683223197,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/944507531/","is_pending":"Not Pending","title":"Majority Element","memory":"46 MB","code":"class Solution {\n    public int majorityElement(int[] nums) {\n        int c = nums.length/2;\n        /* //Hashing\n        Hashmap<Integer, Integer> hm = new HashMap<>();\n        for(int i=0;i<nums.length;i++){\n            hm.put(nums[i], hm.getOrDefault(nums[i], 0)+1);\n            if(hm.get(nums[i])>c)\n                return nums[i];\n        }\n        return -1;*/\n\n        //Moore's Voting Algorithm\n        int maj_index=0, count=1;\n\n        for(int i=1;i<nums.length;i++){\n            if(nums[maj_index]==nums[i]){\n                count++;\n            }else{\n                count--;\n            }\n\n            if(count==0){\n                maj_index = i;\n                count=1;\n            }\n        }\n        return nums[maj_index];\n/* //Since guaranteed that majority element is present\n        count = 0;\n        for(int i:nums){\n            if(i == nums[maj_index])\n                count++;\n        }\n        if(count>c)\n            return nums[maj_index];\n        return -1;\n*/\n    }\n}","compare_result":"111111111111111111111111111111111111111111111","title_slug":"majority-element","has_notes":false,"flag_type":1}