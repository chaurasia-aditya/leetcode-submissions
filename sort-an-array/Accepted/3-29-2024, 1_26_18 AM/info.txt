{"id":1217006264,"question_id":948,"lang":"java","lang_name":"Java","time":"2 months, 4 weeks","timestamp":1711689978,"status":10,"status_display":"Accepted","runtime":"1503 ms","url":"/submissions/detail/1217006264/","is_pending":"Not Pending","title":"Sort an Array","memory":"64.8 MB","code":"class Solution {\n    public void swap(int[] nums, int i, int j){\n        int temp = nums[i];\n        nums[i] = nums[j];\n        nums[j] = temp;\n    }\n    \n    int generatePivot(int low, int high){\n        Random random = new Random();\n        return random.nextInt(high-low+1)+low;\n    } \n\n    public void quicksort(int[] nums, int low, int high){\n        if(low<high){\n            int pivot = generatePivot(low, high);\n            int value = nums[pivot];\n\n            swap(nums, pivot, high);\n            int i = low-1;\n            for(int j = low; j<high; j++){\n                if(nums[j]<value){\n                    i++;\n                    swap(nums, i, j);\n                }\n            }\n\n            swap(nums, i+1, high);\n\n            quicksort(nums, low, i);\n            quicksort(nums, i+2, high);\n        }\n    }\n    public int[] sortArray(int[] nums) {\n        quicksort(nums, 0, nums.length-1);\n        return nums;\n    }\n}","compare_result":"111111111111111111111","title_slug":"sort-an-array","has_notes":false,"flag_type":1}