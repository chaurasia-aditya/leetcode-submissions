{"id":1294843991,"question_id":1748,"lang":"java","lang_name":"Java","time":"5 days, 8 hours","timestamp":1718904639,"status":10,"status_display":"Accepted","runtime":"196 ms","url":"/submissions/detail/1294843991/","is_pending":"Not Pending","title":"Best Team With No Conflicts","memory":"54.8 MB","code":"class Solution {\n    class Player{\n        int age, score;\n\n        Player(int a, int s){\n            age = a;\n            score = s;\n        }\n    }\n\n    int[][] memo;\n\n    int recur(int i, int prev, Player[] p, int n){\n        if(i == n)\n            return 0;\n        \n        if(memo[i][prev+1] != 0)\n            return memo[i][prev+1];\n        \n        int curSc = p[i].score;\n        int prevSc = (prev == -1?0:p[prev].score);\n        int res = -1;\n\n        if(curSc>=prevSc){\n            res = recur(i+1, i, p, n)+curSc;\n        }\n\n        res = Math.max(res, recur(i+1, prev, p, n));\n        return memo[i][prev+1] = res;\n\n    }\n\n    public int bestTeamScore(int[] scores, int[] ages) {\n        int n = scores.length;\n        Player[] parr = new Player[n];\n        for(int i=0;i<n;i++){\n            parr[i] = new Player(ages[i], scores[i]); \n        }\n\n        Arrays.sort(parr, (a,b) -> a.age == b.age ? a.score-b.score: a.age-b.age);\n\n        memo = new int[n][n+1];\n        return recur(0, -1, parr, n);\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"best-team-with-no-conflicts","has_notes":false,"flag_type":1}