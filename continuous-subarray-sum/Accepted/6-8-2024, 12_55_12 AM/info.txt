{"id":1281142665,"question_id":523,"lang":"java","lang_name":"Java","time":"2 weeks, 3 days","timestamp":1717822512,"status":10,"status_display":"Accepted","runtime":"22 ms","url":"/submissions/detail/1281142665/","is_pending":"Not Pending","title":"Continuous Subarray Sum","memory":"57.4 MB","code":"class Solution {\n    public boolean checkSubarraySum(int[] nums, int k) {\n        Map<Integer, Integer> hm = new HashMap<>();\n        int sum = 0;\n        hm.put(0, -1);\n        for(int i=0;i<nums.length;i++){\n            sum+=nums[i];\n            int rem = sum%k;\n            if(hm.containsKey(rem)){\n                if(hm.get(rem)<i-1)\n                    return true;\n            }\n            else\n                hm.put(rem, i);\n        }\n        return false;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"continuous-subarray-sum","has_notes":false,"flag_type":1}