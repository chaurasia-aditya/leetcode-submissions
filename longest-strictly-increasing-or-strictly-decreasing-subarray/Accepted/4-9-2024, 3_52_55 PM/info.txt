{"id":1227983607,"question_id":3372,"lang":"java","lang_name":"Java","time":"2 months, 2 weeks","timestamp":1712692375,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1227983607/","is_pending":"Not Pending","title":"Longest Strictly Increasing or Strictly Decreasing Subarray","memory":"42.3 MB","code":"class Solution {\n    public int longestMonotonicSubarray(int[] nums) {\n        boolean dec = false;\n        int max = 1;\n        int st = 0, i = 1;\n        for(;i<nums.length;i++){\n            if((dec && nums[i]>nums[i-1])||(!dec && nums[i]<nums[i-1])){\n                dec = !dec;\n                max = Math.max(i-st, max);\n                st = i-1;\n            }else if(nums[i]==nums[i-1]){\n                max = Math.max(i-st, max);\n                st = i;\n            }\n        }\n\n        max = Math.max(i-st, max);\n\n        return max;\n    }\n}","compare_resulttitle_slug":"longest-strictly-increasing-or-strictly-decreasing-subarray","has_notes":false,"flag_type":1}