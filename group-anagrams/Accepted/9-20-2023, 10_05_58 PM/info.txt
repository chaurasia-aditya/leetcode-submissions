{"id":1055023710,"question_id":49,"lang":"java","lang_name":"Java","time":"9 months, 1 week","timestamp":1695261958,"status":10,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/1055023710/","is_pending":"Not Pending","title":"Group Anagrams","memory":"46.5 MB","code":"class Solution {\n    public List<List<String>> groupAnagrams(String[] strs) {\n        Map<String, List<String>> hm = new HashMap<>();\n        for (String str : strs) {\n            char[] count = new char[26];\n            for(char ch: str.toCharArray()){\n                count[ch-'a']++;\n            }\n            String anagram = new String(count);\n            if(!hm.containsKey(anagram)){\n                hm.put(anagram, new ArrayList<>());\n            }\n            hm.get(anagram).add(str);\n        }\n        return new ArrayList<>(hm.values());\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"group-anagrams","has_notes":false,"flag_type":1}