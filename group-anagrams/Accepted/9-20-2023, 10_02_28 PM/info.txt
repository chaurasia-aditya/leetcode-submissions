{"id":1055022091,"question_id":49,"lang":"java","lang_name":"Java","time":"9 months, 1 week","timestamp":1695261748,"status":10,"status_display":"Accepted","runtime":"17 ms","url":"/submissions/detail/1055022091/","is_pending":"Not Pending","title":"Group Anagrams","memory":"47.9 MB","code":"class Solution {\n    public List<List<String>> groupAnagrams(String[] strs) {\n        HashMap<String, ArrayList<String>> hm = new HashMap<String, ArrayList<String>>();\n        for (String str : strs) {\n            int[] count = new int[26];\n            for(char ch: str.toCharArray()){\n                count[ch-'a']++;\n            }\n            String anagram = Arrays.toString(count);\n            if(!hm.containsKey(anagram)){\n                hm.put(anagram, new ArrayList<>());\n            }\n            hm.get(anagram).add(str);\n        }\n        return new ArrayList<>(hm.values());\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"group-anagrams","has_notes":false,"flag_type":1}