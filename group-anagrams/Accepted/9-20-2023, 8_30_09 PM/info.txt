{"id":1054983200,"question_id":49,"lang":"java","lang_name":"Java","time":"9 months, 1 week","timestamp":1695256209,"status":10,"status_display":"Accepted","runtime":"60 ms","url":"/submissions/detail/1054983200/","is_pending":"Not Pending","title":"Group Anagrams","memory":"51.1 MB","code":"class Solution {\n    public List<List<String>> groupAnagrams(String[] strs) {\n        HashMap<HashMap<Character, Integer>, ArrayList<String> >\n            map = new HashMap<HashMap<Character, Integer>, ArrayList<String>>();\n        for (String str : strs) {\n            HashMap<Character, Integer> tempMap = new HashMap<Character, Integer>();\n            for (int i = 0; i < str.length(); i++) {\n                if (tempMap.containsKey(str.charAt(i))) {\n                    int x = tempMap.get(str.charAt(i));\n                    tempMap.put(str.charAt(i), ++x);\n                }\n                else {\n                    tempMap.put(str.charAt(i), 1);\n                }\n            }\n \n            if (map.containsKey(tempMap))\n                map.get(tempMap).add(str);\n            else {\n                ArrayList<String> tempList = new ArrayList<String>();\n                tempList.add(str);\n                map.put(tempMap, tempList);\n            }\n        }\n \n        // Stores the result in a arraylist\n        List<List<String>> result = new ArrayList<>();\n        for (HashMap<Character, Integer> temp : map.keySet())\n            result.add(map.get(temp));\n        return result;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"group-anagrams","has_notes":false,"flag_type":1}