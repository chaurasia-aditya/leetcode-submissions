{"id":1185396337,"question_id":1014,"lang":"java","lang_name":"Java","time":"4Â months","timestamp":1708832381,"status":10,"status_display":"Accepted","runtime":"30 ms","url":"/submissions/detail/1185396337/","is_pending":"Not Pending","title":"K Closest Points to Origin","memory":"52.5 MB","code":"class Solution {\n    public int[][] kClosest(int[][] points, int k) {\n        PriorityQueue<int[]> pq = new PriorityQueue<int[]>(k, (p1, p2) -> p2[0] * p2[0] + p2[1] * p2[1] - p1[0] * p1[0] - p1[1] * p1[1]);\n        for (int[] p : points) {\n            pq.offer(p);\n            if (pq.size() > k) {\n                pq.poll();\n            }\n        }\n        int[][] res = new int[k][2];\n        while (k > 0) {\n            res[--k] = pq.poll();\n        }\n        return res;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"k-closest-points-to-origin","has_notes":false,"flag_type":1}