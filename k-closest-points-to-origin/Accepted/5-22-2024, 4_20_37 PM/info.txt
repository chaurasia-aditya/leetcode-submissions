{"id":1265211719,"question_id":1014,"lang":"java","lang_name":"Java","time":"1Â month","timestamp":1716409237,"status":10,"status_display":"Accepted","runtime":"27 ms","url":"/submissions/detail/1265211719/","is_pending":"Not Pending","title":"K Closest Points to Origin","memory":"50.4 MB","code":"class Solution {\n    class point implements Comparable<point>{\n        int x, y;\n        double dist;\n        \n        public point(int i, int j){\n            x = i;\n            y = j;\n            \n            dist = Math.sqrt(x*x + y*y);\n        }\n        \n        public int compareTo(point b){\n            if(dist<=b.dist)\n                return -1;\n            return 1;\n        }\n    }\n    public int[][] kClosest(int[][] points, int k) {\n        ArrayList<point> p = new ArrayList<>();\n        \n        for(int i=0;i<points.length;i++){\n            p.add(new point(points[i][0], points[i][1]));\n        }\n        \n        Collections.sort(p);\n        \n        int[][] res = new int[k][2];\n        \n        for(int i=0;i<k;i++){\n            res[i][0] = p.get(i).x;\n            res[i][1] = p.get(i).y;\n        }\n        \n        return res;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"k-closest-points-to-origin","has_notes":false,"flag_type":1}