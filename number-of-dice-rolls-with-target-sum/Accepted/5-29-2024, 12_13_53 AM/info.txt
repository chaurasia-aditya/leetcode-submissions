{"id":1271019330,"question_id":1263,"lang":"java","lang_name":"Java","time":"3 weeks, 6 days","timestamp":1716956033,"status":10,"status_display":"Accepted","runtime":"10 ms","url":"/submissions/detail/1271019330/","is_pending":"Not Pending","title":"Number of Dice Rolls With Target Sum","memory":"43.3 MB","code":"class Solution {\n    final int MOD = 1000000007;\n    int dfs(int n, int k, int rem, int[][] dp){\n        if(n == 0 && rem == 0){\n            return 1;\n        }\n        \n        if(n<=0 || rem<=0)\n            return 0;\n        \n        if(dp[n][rem]!=-1)\n            return dp[n][rem];\n        \n        int res = 0;\n        \n        for(int i=1;i<=k;i++){\n            res+=(dfs(n-1, k, rem-i, dp));\n            res%=MOD;\n        }\n        \n        dp[n][rem] = res;\n        return dp[n][rem];\n    }\n    \n    public int numRollsToTarget(int n, int k, int target) {\n        int[][] dp = new int[n+1][1000];\n        \n        for(int i=0;i<=n;i++)\n            Arrays.fill(dp[i], -1);\n        \n        return dfs(n, k, target, dp);\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111","title_slug":"number-of-dice-rolls-with-target-sum","has_notes":false,"flag_type":1}