{"id":1297514671,"question_id":2443,"lang":"java","lang_name":"Java","time":"2 days, 19 hours","timestamp":1719127227,"status":10,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/1297514671/","is_pending":"Not Pending","title":"Check if There is a Valid Partition For The Array","memory":"63.6 MB","code":"class Solution {\n    Boolean[] memo;\n    boolean check(int i, int n, int[] nums){\n        if(i == n)\n            return true;\n        if(memo[i]!=null)\n            return memo[i];\n        \n        boolean res = false;\n\n        if(i+1<n && nums[i+1] == nums[i])\n            res |= check(i+2, n, nums);\n\n        if(!res && i+2<n && nums[i+1] == nums[i] && nums[i+2] == nums[i])\n            res |= check(i+3, n, nums);\n        \n        if(!res && i+2<n && nums[i+1] == nums[i]+1 && nums[i+2] == nums[i]+2)\n            res |= check(i+3, n, nums);\n\n        return memo[i] = res;\n    }\n\n    public boolean validPartition(int[] nums) {\n        int n = nums.length;\n        memo = new Boolean[n];\n\n        return check(0, n, nums);\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"check-if-there-is-a-valid-partition-for-the-array","has_notes":false,"flag_type":1}