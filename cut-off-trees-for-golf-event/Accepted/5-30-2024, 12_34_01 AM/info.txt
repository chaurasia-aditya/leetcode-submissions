{"id":1272011140,"question_id":675,"lang":"java","lang_name":"Java","time":"3 weeks, 5 days","timestamp":1717043641,"status":10,"status_display":"Accepted","runtime":"598 ms","url":"/submissions/detail/1272011140/","is_pending":"Not Pending","title":"Cut Off Trees for Golf Event","memory":"45.1 MB","code":"class Solution {\n    int[] dy = {0, 0, 1, -1};\n    int[] dx = {1, -1, 0, 0};\n    \n    class Tree implements Comparable<Tree>{\n        int i, j;\n        int height;\n        \n        Tree(int i, int j, int h){\n            this.i = i;\n            this.j = j;\n            height = h;\n        }\n        \n        public int compareTo(Tree b){\n            return height-b.height;\n        }\n    }\n    public int cutOffTree(List<List<Integer>> forest) {\n        PriorityQueue<Tree> pq = new PriorityQueue<>();\n        \n        int m = forest.size();\n        int n = forest.get(0).size();\n        \n        for(int i = 0;i<m;i++){\n            List<Integer> l = forest.get(i);\n            for(int j=0;j<n;j++){\n                if(l.get(j)>1)\n                    pq.offer(new Tree(i, j, l.get(j)));\n            }\n        }\n        \n        int st_i = 0, st_j = 0;\n        int count = 0;\n        \n        \n        while(!pq.isEmpty()){\n            Tree cur = pq.poll();\n            \n            Queue<int[]> q = new LinkedList<>();\n            q.offer(new int[]{st_i, st_j});\n            \n            boolean found = false;\n            boolean[][] visited = new boolean[m][n];\n            int steps = -1;\n            \n            while(!q.isEmpty() && !found){\n                steps++;\n                \n                int size = q.size();\n                \n                while(size-->0){\n                    int[] curLoc = q.poll();\n                    \n                    if (visited[curLoc[0]][curLoc[1]]) \n                            continue;\n                    visited[curLoc[0]][curLoc[1]] = true;\n\n                    if (forest.get(curLoc[0]).get(curLoc[1]) == 0) \n                        continue;\n\n                    if (curLoc[0] == cur.i && curLoc[1] == cur.j) {\n                        st_i = curLoc[0];\n                        st_j = curLoc[1];\n                        found = true;\n                        break;\n                    }\n\n                    for (int k = 0; k < 4; k++) {\n                        int x = curLoc[0] + dx[k];\n                        int y = curLoc[1] + dy[k];\n\n                        if (x<0 || y<0 || x>=m || y >= n || visited[x][y] || forest.get(x).get(y) == 0)   \n                            continue;\n                        q.offer(new int[]{x, y});\n                    }                \n                }\n            }\n            \n            if(steps == -1 || !found)\n                return -1;\n            count+=steps;\n        }\n        return count;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111","title_slug":"cut-off-trees-for-golf-event","has_notes":false,"flag_type":1}