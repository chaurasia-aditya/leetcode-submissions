{"id":1225636208,"question_id":883,"lang":"java","lang_name":"Java","time":"2 months, 2 weeks","timestamp":1712479820,"status":10,"status_display":"Accepted","runtime":"90 ms","url":"/submissions/detail/1225636208/","is_pending":"Not Pending","title":"Car Fleet","memory":"57.9 MB","code":"class Solution {\n    class cars implements Comparable<cars>{\n        public int pos, speed;\n\n        cars(int p, int s){\n            pos = p;\n            speed = s;\n        }\n\n        public int compareTo(cars y){\n            return this.pos-y.pos;\n        }\n    }\n    public int carFleet(int target, int[] position, int[] speed) {\n        int n = position.length;\n        cars arr[] = new cars[n];\n\n        for(int i=0;i<n;i++){\n            arr[i] = new cars(position[i], speed[i]);\n        }\n\n        Arrays.sort(arr);\n\n        Stack<Float> st = new Stack<>();\n        for(cars car:arr){\n            float timeNeeded = (target-car.pos)/(float)car.speed;\n            while(!st.isEmpty() && timeNeeded>=st.peek()){\n                st.pop();\n            }\n            st.push(timeNeeded);\n        }\n\n        return st.size();\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111","title_slug":"car-fleet","has_notes":false,"flag_type":1}