{"id":1290601374,"question_id":139,"lang":"java","lang_name":"Java","time":"1 week, 2 days","timestamp":1718585161,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/1290601374/","is_pending":"Not Pending","title":"Word Break","memory":"44.3 MB","code":"class Solution {\n    boolean backtrack(int st, int n, String s, Set<String> dict, Map<String, Boolean> memo){\n        if(st>=n)\n            return true;\n        \n        String str = s.substring(st, n);\n\n        if(memo.containsKey(str))\n            return memo.get(str);\n\n        for(int i=st+1;i<=n;i++){\n            String sub = s.substring(st, i);\n            if(dict.contains(sub) && backtrack(i, n, s, dict, memo)){\n                memo.put(str, true);\n                return true;\n            }\n        }\n        memo.put(str, false);\n        return false;\n    }\n\n    public boolean wordBreak(String s, List<String> wordDict) {\n        Set<String> dict = new HashSet<>(wordDict);\n        Map<String, Boolean> memo = new HashMap<>();\n        int n = s.length();\n\n        return backtrack(0, n, s, dict, memo);\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111","title_slug":"word-break","has_notes":false,"flag_type":1}