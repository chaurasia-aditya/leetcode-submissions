{"id":1075493292,"question_id":3150,"lang":"java","lang_name":"Java","time":"8 months, 2 weeks","timestamp":1697339921,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/1075493292/","is_pending":"Not Pending","title":"Shortest and Lexicographically Smallest Beautiful String","memory":"41.6 MB","code":"class Solution {\n    public String shortestBeautifulSubstring(String s, int k) {\n        ArrayList<Integer> al = new ArrayList<>();\n        int count = 0, start = -1;\n        int len = Integer.MAX_VALUE;\n        \n        String res = \"\";\n        for(int i=0;i<s.length();i++){\n            if(s.charAt(i) == '1'){\n                // System.out.println(\"i=\"+i);\n                al.add(i);\n                count++;\n                if(k==1){\n                    return s.substring(i,i+1);\n                }\n                if(count == k){\n                    if(len > i-al.get(start)+1){\n                        len = i-al.get(start)+1;\n                        // System.out.println(\"len = \"+len);\n                        res = s.substring(al.get(start), i+1);\n                    }else if(len == i-al.get(start)+1 && res.length()!=0 && res.compareTo(s.substring(al.get(start), i+1))>0){\n                        res = s.substring(al.get(start), i+1);\n                    }\n                    count--;\n                    start++;\n                }else if(count == 1){\n                    start = 0;\n                }\n            }   \n        }\n        return res;\n    }\n}","compare_resulttitle_slug":"shortest-and-lexicographically-smallest-beautiful-string","has_notes":false,"flag_type":1}