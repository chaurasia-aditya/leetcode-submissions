{"id":1272180925,"question_id":162,"lang":"java","lang_name":"Java","time":"3 weeks, 5 days","timestamp":1717057636,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1272180925/","is_pending":"Not Pending","title":"Find Peak Element","memory":"42.1 MB","code":"class Solution {\n    public int findPeakElement(int[] nums) {\n        int n = nums.length;\n        \n        if(n == 1)\n            return 0;\n        \n        if(nums[0]>nums[1])\n            return 0;\n        if(nums[n-1]>nums[n-2])\n            return n-1;\n        \n        int low = 1, high = n-2;\n        \n        while(low<=high){\n            int mid = low+(high-low)/2;\n            \n            if(nums[mid-1]<nums[mid] && nums[mid+1]<nums[mid])\n                return mid;\n            else if(nums[mid]<nums[mid-1])\n                high = mid-1;\n            else if(nums[mid]<nums[mid+1])\n                low = mid+1;\n        }\n        \n        return low;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-peak-element","has_notes":false,"flag_type":1}