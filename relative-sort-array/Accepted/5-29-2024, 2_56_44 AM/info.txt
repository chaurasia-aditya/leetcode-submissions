{"id":1271148224,"question_id":1217,"lang":"java","lang_name":"Java","time":"3 weeks, 6 days","timestamp":1716965804,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/1271148224/","is_pending":"Not Pending","title":"Relative Sort Array","memory":"41.8 MB","code":"class Solution {\n    public int[] relativeSortArray(int[] arr1, int[] arr2) {\n        int n1= arr1.length;\n        int n2 = arr2.length;\n        \n        int[] count = new int[n2];\n        \n        Map<Integer, Integer> hm = new HashMap<>();\n        \n        for(int i = 0;i<n2;i++)\n            hm.put(arr2[i], i);\n        \n        int total = 0;\n        for(int x:arr1){\n            if(hm.containsKey(x)){\n                count[hm.get(x)]++;\n                total++;\n            }\n        }\n        int i = 0;\n        int k = 0;\n        \n        int[] res = new int[n1];\n        \n        for(int x:count){\n            while(x-->0){\n                res[k++] = arr2[i];\n            }\n            i++;\n        }\n        \n        for(int x:arr1){\n            if(!hm.containsKey(x)){\n                res[k++] = x;\n            }\n        }\n        \n        Arrays.sort(res, total, n1);\n        \n        return res;\n    }\n}","compare_result":"11111111111111111","title_slug":"relative-sort-array","has_notes":false,"flag_type":1}