{"id":1165592335,"question_id":1544,"lang":"java","lang_name":"Java","time":"4 months, 3 weeks","timestamp":1707028813,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/1165592335/","is_pending":"Not Pending","title":"Count Good Nodes in Binary Tree","memory":"52.7 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int count;\n    public void dfs(TreeNode cur, int max){\n        if(cur == null)\n            return;\n        \n        if(cur.val>=max){\n            count++;\n            max = cur.val;\n        }\n\n        dfs(cur.left, max);\n        dfs(cur.right, max);\n    }\n    public int goodNodes(TreeNode root) {\n        dfs(root, root.val);\n\n        return count;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111","title_slug":"count-good-nodes-in-binary-tree","has_notes":false,"flag_type":1}