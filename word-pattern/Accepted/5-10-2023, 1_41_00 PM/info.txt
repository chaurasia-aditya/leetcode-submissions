{"id":947977340,"question_id":290,"lang":"java","lang_name":"Java","time":"1 year, 1 month","timestamp":1683740460,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/947977340/","is_pending":"Not Pending","title":"Word Pattern","memory":"40.5 MB","code":"class Solution {\n    public boolean wordPattern(String pattern, String s) {\n        String[] words = s.split(\" \");\n        HashMap<Character, Integer> hm = new HashMap<>();\n        HashSet<String> hs = new HashSet<>();\n        if(words.length!=pattern.length())\n            return false;\n\n        for(int i=0;i<pattern.length();i++)\n        {\n            char ch = pattern.charAt(i);\n            if(hm.containsKey(ch) && words[hm.get(ch)].compareTo(words[i])!=0){\n                return false;\n            }else if(!hm.containsKey(ch)){\n                if(hs.contains(words[i]))\n                    return false;\n                hm.put(ch, i);\n                hs.add(words[i]);\n            }\n        }\n        return true;\n    }\n}","compare_result":"11111111111111111111111111111111111111111","title_slug":"word-pattern","has_notes":false,"flag_type":1}