{"id":947985984,"question_id":290,"lang":"java","lang_name":"Java","time":"1 year, 1 month","timestamp":1683741347,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/947985984/","is_pending":"Not Pending","title":"Word Pattern","memory":"40.6 MB","code":"class Solution {\n    public boolean wordPattern(String pattern, String s) {\n        String[] words = s.split(\" \");\n        if(words.length!=pattern.length())\n            return false;\n\n        HashMap<Character, Integer> hm = new HashMap<>();\n        HashSet<String> hs = new HashSet<>();\n        char ch;\n        String cur;\n        boolean found;\n        for(int i=0;i<pattern.length();i++)\n        {\n            ch = pattern.charAt(i);\n            cur = words[i];\n            found = hm.containsKey(ch);\n\n            if(found && words[hm.get(ch)].compareTo(cur)!=0){\n                return false;\n            }else if(!found){\n                if(hs.contains(cur))\n                    return false;\n                hm.put(ch, i);\n                hs.add(cur);\n            }\n        }\n        return true;\n    }\n}","compare_result":"11111111111111111111111111111111111111111","title_slug":"word-pattern","has_notes":false,"flag_type":1}