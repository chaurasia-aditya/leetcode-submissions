{"id":954614253,"question_id":112,"lang":"java","lang_name":"Java","time":"1 year, 1 month","timestamp":1684688118,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/954614253/","is_pending":"Not Pending","title":"Path Sum","memory":"43.6 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean found = false;\n    public void pathSum(TreeNode root, int remSum){\n        if(found == true)\n            return;\n        if(remSum == root.val && root.left == null && root.right == null)\n            found = true;\n        if(root.left != null)\n            hasPathSum(root.left, remSum-root.val);\n        if(root.right!=null)\n            hasPathSum(root.right, remSum-root.val);\n    }\n    public boolean hasPathSum(TreeNode root, int targetSum) {\n        if(root == null && targetSum>0)\n            return false;\n        if(root!=null)\n            pathSum(root, targetSum);\n        \n        return found;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-sum","has_notes":false,"flag_type":1}