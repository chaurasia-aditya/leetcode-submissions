{"id":955015686,"question_id":637,"lang":"java","lang_name":"Java","time":"1 year, 1 month","timestamp":1684748433,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/955015686/","is_pending":"Not Pending","title":"Average of Levels in Binary Tree","memory":"44.7 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public List<Double> averageOfLevels(TreeNode root) {\n        LinkedList<TreeNode> level = new LinkedList<>();\n        List<Double> res = new LinkedList<>();\n        int size, n;\n        double curSum;\n        TreeNode cur;\n        level.add(root);\n\n        while(!level.isEmpty()){\n            size = level.size();\n            n=size;\n            curSum = 0;\n            \n            while(n-->0){\n                cur = level.remove();\n                curSum+= cur.val;\n\n                if(cur.left!=null)\n                    level.add(cur.left);\n                if(cur.right!=null)\n                    level.add(cur.right);\n            }\n            res.add(curSum/size);\n        }\n        return res;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111","title_slug":"average-of-levels-in-binary-tree","has_notes":false,"flag_type":1}