{"id":1081189003,"question_id":417,"lang":"java","lang_name":"Java","time":"8 months, 1 week","timestamp":1697960206,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/1081189003/","is_pending":"Not Pending","title":"Pacific Atlantic Water Flow","memory":"44.4 MB","code":"class Solution {\n    public void explore(int i, int j, int[][] heights, boolean[][] visited, int m, int n, int par){\n        if(i<0||j<0||i==m||j==n||visited[i][j]||heights[i][j]<par){\n            return;\n        }\n        \n        visited[i][j] = true;\n        explore(i-1,j, heights, visited, m, n, heights[i][j]);\n        explore(i+1,j, heights, visited, m, n, heights[i][j]);\n        explore(i,j+1, heights, visited, m, n, heights[i][j]);\n        explore(i,j-1, heights, visited, m, n, heights[i][j]);\n    }\n    public List<List<Integer>> pacificAtlantic(int[][] heights) {\n        int m = heights.length;\n        int n = heights[0].length;\n        boolean[][] atl = new boolean[m][n];\n        boolean[][] pac = new boolean[m][n];\n        List<List<Integer>> res = new ArrayList<>();\n\n        for(int i=0;i<m;i++){\n            explore(i, 0, heights, pac, m, n, heights[i][0]);\n            explore(i, n-1, heights, atl, m, n, heights[i][n-1]);\n        }\n        for(int i=0;i<n;i++){\n            explore(0, i, heights, pac, m, n, heights[0][i]);\n            explore(m-1, i, heights, atl, m, n, heights[m-1][i]);\n        }\n\n        for(int i=0;i<m;i++){\n            for(int j=0;j<n;j++){\n                if(pac[i][j] && atl[i][j])\n                    res.add(Arrays.asList(i,j));\n            }\n        }\n        return res;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"pacific-atlantic-water-flow","has_notes":false,"flag_type":1}