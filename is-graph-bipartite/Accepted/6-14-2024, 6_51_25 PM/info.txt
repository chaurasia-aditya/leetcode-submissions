{"id":1288553372,"question_id":801,"lang":"java","lang_name":"Java","time":"1 week, 4 days","timestamp":1718405485,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1288553372/","is_pending":"Not Pending","title":"Is Graph Bipartite?","memory":"44.4 MB","code":"class Solution {\n    boolean isBipartite(int index, int[] colour, int[][] graph){\n        Queue<Integer> q = new LinkedList();\n        q.offer(index);\n        colour[index] = 0;\n\n        while(!q.isEmpty()){\n            int temp = q.poll();\n\n            int[] adj = graph[temp];\n            for(int i:adj){\n                if(colour[i] == -1){\n                    colour[i] = 1-colour[temp];\n                    q.offer(i);\n                }else if(colour[i] == colour[temp]){\n                    return false;\n                } \n            }\n        }\n\n        return true;\n    }\n    public boolean isBipartite(int[][] graph) {\n        int n = graph.length;\n        int[] colour = new int[n];\n        Arrays.fill(colour, -1);\n\n        for(int i=0;i<n;i++){\n            if(colour[i] == -1){\n                if(!isBipartite(i, colour, graph)){\n                    return false;\n                }\n            }\n        }\n\n        return true;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"is-graph-bipartite","has_notes":false,"flag_type":1}