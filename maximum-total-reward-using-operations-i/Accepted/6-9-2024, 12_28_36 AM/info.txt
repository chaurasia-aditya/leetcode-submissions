{"id":1282419192,"question_id":3442,"lang":"java","lang_name":"Java","time":"2 weeks, 2 days","timestamp":1717907316,"status":10,"status_display":"Accepted","runtime":"119 ms","url":"/submissions/detail/1282419192/","is_pending":"Not Pending","title":"Maximum Total Reward Using Operations I","memory":"73 MB","code":"class Solution {\n    int[][] memo;\n    \n    int dfs(int i, int n, int cur, int[] arr){\n        if(i>=n || cur>2000)\n            return cur;\n        else if(memo[i][cur]!=0)\n            return memo[i][cur];\n        int res = 0;\n        if(arr[i]>cur)\n            res = dfs(i+1, n, cur+arr[i], arr);\n        res = Math.max(res, dfs(i+1, n, cur, arr));\n        \n        memo[i][cur] = res;\n        return res;\n        \n    }\n    public int maxTotalReward(int[] arr) {\n        Arrays.sort(arr);\n        int n = arr.length;\n        \n        memo = new int[n][2001];\n\n        return dfs(0, n, 0, arr);\n    }\n}","compare_resulttitle_slug":"maximum-total-reward-using-operations-i","has_notes":false,"flag_type":1}