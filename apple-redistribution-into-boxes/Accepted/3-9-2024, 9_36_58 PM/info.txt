{"id":1199057608,"question_id":3334,"lang":"java","lang_name":"Java","time":"3 months, 2 weeks","timestamp":1710038218,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1199057608/","is_pending":"Not Pending","title":"Apple Redistribution into Boxes","memory":"41.9 MB","code":"class Solution {\n    public int minimumBoxes(int[] apple, int[] capacity) {\n        int n = apple.length;\n        int m = capacity.length-1;\n        Arrays.sort(capacity);\n        int cap = capacity[m];\n        int total = 0;\n        for(int i=0;i<n;i++)\n        {\n            total+=apple[i];\n            if(total>cap){\n                m--;\n                cap+=capacity[m];\n            }\n        }\n        while(total>cap){\n            m--;\n            cap+=capacity[m];\n        }\n        return capacity.length-m;\n    }\n}","compare_resulttitle_slug":"apple-redistribution-into-boxes","has_notes":false,"flag_type":1}