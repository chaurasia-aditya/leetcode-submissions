{"id":1259962286,"question_id":1160,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1715890156,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1259962286/","is_pending":"Not Pending","title":"Letter Tile Possibilities","memory":"41.1 MB","code":"class Solution {\n    int res = 0;\n    void backtrack(int size, int n, char[] s, boolean[] visited){\n        if(size == n){\n            return;\n        }\n\n        for(int i=0;i<n;){\n            if(!visited[i]){\n                res++;\n                visited[i] = true;\n                backtrack(size+1, n, s, visited);\n                visited[i] = false;\n                i++;\n                while(i<n && s[i] == s[i-1])\n                    i++;\n                continue;\n            }\n            i++;\n        }\n    }\n    public int numTilePossibilities(String tiles) {\n        char[] s = tiles.toCharArray();\n        int n = s.length;\n        Arrays.sort(s);\n\n        boolean[] visited = new boolean[n];\n                \n        backtrack(0, s.length, s, visited);\n        \n        return res;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"letter-tile-possibilities","has_notes":false,"flag_type":1}