{"id":1055944646,"question_id":155,"lang":"java","lang_name":"Java","time":"9 months, 1 week","timestamp":1695354098,"status":10,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/1055944646/","is_pending":"Not Pending","title":"Min Stack","memory":"47.4 MB","code":"class MinStack {\n    Stack<Node> s;\n \n    class Node {\n        int val;\n        int min;\n        public Node(int val, int min)\n        {\n            this.val = val;\n            this.min = min;\n        }\n    }\n\n    public MinStack() { \n        s = new Stack<Node>(); \n    }\n    public void push(int x)\n    {\n        if (s.isEmpty()) {\n            s.push(new Node(x, x));\n        }\n        else {\n            int min = Math.min(s.peek().min, x);\n            s.push(new Node(x, min));\n        }\n    }\n    public int pop() { \n        return s.pop().val; \n    }\n    public int top() { \n        return s.peek().val; \n    }\n    public int getMin() { \n        return s.peek().min; \n    }\n}\n\n/**\n * Your MinStack object will be instantiated and called as such:\n * MinStack obj = new MinStack();\n * obj.push(val);\n * obj.pop();\n * int param_3 = obj.top();\n * int param_4 = obj.getMin();\n */","compare_result":"1111111111111111111111111111111","title_slug":"min-stack","has_notes":false,"flag_type":1}