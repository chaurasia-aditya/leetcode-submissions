{"id":1272740230,"question_id":909,"lang":"java","lang_name":"Java","time":"3 weeks, 5 days","timestamp":1717103277,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/1272740230/","is_pending":"Not Pending","title":"Stone Game","memory":"44.4 MB","code":"class Solution {\n    int getMax(int st, int end, int[] piles, int[][] dp){\n        if(st==end)\n            return piles[st];\n\n        if(dp[st][end]!=-1)\n            return dp[st][end];\n        \n        int takeFirst = piles[st]-getMax(st+1, end, piles, dp);\n\n        int takeLast = piles[end]-getMax(st, end-1, piles, dp);\n\n        return dp[st][end] = Math.max(takeFirst, takeLast);\n    }\n    public boolean stoneGame(int[] piles) {\n        int n = piles.length;\n        int[][] dp = new int[n][n];\n        for(int[] i: dp)\n            Arrays.fill(i, -1);\n        \n        for(int i=0;i<n;i++)\n            dp[i][i] = piles[i];\n        \n        return getMax(0, n-1, piles, dp)>0;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111","title_slug":"stone-game","has_notes":false,"flag_type":1}