{"id":1280953662,"question_id":18,"lang":"java","lang_name":"Java","time":"2 weeks, 4 days","timestamp":1717797642,"status":10,"status_display":"Accepted","runtime":"19 ms","url":"/submissions/detail/1280953662/","is_pending":"Not Pending","title":"4Sum","memory":"44.7 MB","code":"class Solution {\n    public List<List<Integer>> fourSum(int[] nums, int target) {\n        List<List<Integer>> res = new ArrayList<>();\n        Set<List<Integer>> hs = new HashSet<>();\n        int n = nums.length;\n        long sum;\n\n        int low, high;\n\n        Arrays.sort(nums);\n\n        for(int i=0;i<n-3;i++){\n            for(int j=i+1;j<n-2;j++){\n                low = j+1;\n                high = n-1;\n\n                while(low<high){\n                    sum = (long)nums[i]+nums[j]+nums[low]+nums[high];\n\n                    if(sum>target)\n                        high--;\n                    else if(sum<target)\n                        low++;\n                    else{\n                        List<Integer> cur = Arrays.asList(nums[i], nums[j], nums[low], nums[high]);\n                        if(!hs.contains(cur))\n                            hs.add(cur);\n                        low++;\n                        high--;\n                    }\n                }\n                while(j<n-2 && nums[j+1]==nums[j])\n                    j++;\n            }\n            while(i<n-3 && nums[i+1]==nums[i])\n                i++;\n        }\n\n        res.addAll(hs);\n        return res;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"4sum","has_notes":false,"flag_type":1}