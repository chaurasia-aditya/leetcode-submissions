{"id":1212247462,"question_id":242,"lang":"java","lang_name":"Java","time":"3Â months","timestamp":1711253704,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/1212247462/","is_pending":"Not Pending","title":"Valid Anagram","memory":"43.3 MB","code":"class Solution {\n    public boolean isAnagram(String s, String t) {\n        if(s.length() != t.length())\n            return false;\n\n        int[] count1 = new int[26];\n        int[] count2 = new int[26];\n\n        // Map<Character, Integer> hm1= new HashMap<>();\n        // Map<Character, Integer> hm2 = new HashMap<>();\n\n        for(char ch: s.toCharArray()){\n            // int cur = hm1.getOrDefault(s.charAt(i), 0);\n            // hm1.put(s.charAt(i), cur+1);\n            count1[ch -'a']++;\n        }\n\n        for(char ch: t.toCharArray()){\n            // int cur = hm2.getOrDefault(t.charAt(i), 0);\n            // hm2.put(t.charAt(i), cur+1);\n            count2[ch-'a']++;\n        }\n\n        for(int i=0;i<26;i++){\n            if(count1[i]!=count2[i])\n                return false;\n        }\n\n        // if(hm1.keySet().equals(hm2.keySet()) == false){\n        //     return false;\n        // }\n\n        // for(Character ch: hm1.keySet()){\n        //     if(hm1.get(ch).equals(hm2.get(ch)) == false){\n        //         return false;\n        //     }\n        // }\n\n        return true;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111","title_slug":"valid-anagram","has_notes":false,"flag_type":1}