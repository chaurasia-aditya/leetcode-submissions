{"id":1063656935,"question_id":3141,"lang":"java","lang_name":"Java","time":"8 months, 4 weeks","timestamp":1696131298,"status":10,"status_display":"Accepted","runtime":"57 ms","url":"/submissions/detail/1063656935/","is_pending":"Not Pending","title":"Minimum Size Subarray in Infinite Array","memory":"57.8 MB","code":"class Solution {\n    public int minSizeSubarray(int[] nums, int target) {\n        int total = 0;\n        for(int i=0;i<nums.length;i++){\n            total+=nums[i];\n        }\n        \n        int full = (target/total)*nums.length;\n        System.out.println(\"full = \"+full);\n        target = target%total;\n        if(target == 0){\n            return full;\n        }\n        \n        int[] nums2 = new int[nums.length*2];\n        System.arraycopy(nums, 0, nums2, 0, nums.length);\n        System.arraycopy(nums, 0, nums2, nums.length, nums.length);\n        \n        \n        HashMap<Integer, Integer> hm = new HashMap<>();\n        int left, cur = 0;\n        int res = Integer.MAX_VALUE;\n\n        for(int i = 0; i < nums2.length; i++){\n            cur += nums2[i];\n            if(cur == target){\n                res = Math.min(res, i+1);\n            }\n            left = cur - target;\n\n            if(hm.containsKey(left)){\n                int index = hm.get(left);\n                res = Math.min(res, i - index);\n            }\n            hm.put(cur, i);\n        }\n        // if(res == Integer.MAX_VALUE) \n        //     return -1;\n        \n//         int low=0, high=0;\n//         long cur = nums[low];\n//         int res = Integer.MAX_VALUE;\n//         while(low<=high && high<nums.length){\n//             System.out.println(\"low = \"+low + \" high=\"+high);\n//             if(cur<target){\n//                 high++;\n//                 if(high==nums.length)\n//                     break;\n//                 cur+=nums[high];\n//             }else if(cur>target){\n//                 cur-=nums[low];\n//                 low++;\n//             }else{\n//                 System.out.println(\"res recalculate\");\n//                 res = Math.min(res, high-low+1);\n//                 if(high == low && high<nums.length){\n                    \n//                 }\n//                 cur-=nums[low];\n//                 low++;\n//             }\n//         }\n        if(res == Integer.MAX_VALUE)\n            return -1;\n        return full+res;\n    }\n}","compare_resulttitle_slug":"minimum-size-subarray-in-infinite-array","has_notes":false,"flag_type":1}