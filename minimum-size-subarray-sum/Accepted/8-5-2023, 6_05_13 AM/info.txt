{"id":1012762892,"question_id":209,"lang":"java","lang_name":"Java","time":"10 months, 3 weeks","timestamp":1691229913,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/1012762892/","is_pending":"Not Pending","title":"Minimum Size Subarray Sum","memory":"56 MB","code":"class Solution {\n    public int minSubArrayLen(int target, int[] nums) {\n        int i,j, cur_sum=0, min = nums.length+1;\n        for(i = 0, j=0;i<nums.length;){\n            if(cur_sum>=target){\n                min = Math.min(min, j-i);\n                cur_sum-=nums[i];\n                i++;\n                continue;\n            }\n            if(j==nums.length){\n                break;\n            }\n            cur_sum+=nums[j];\n            j++;\n        }\n        return min>nums.length?0:min;\n    }\n}","compare_result":"111111111111111111111","title_slug":"minimum-size-subarray-sum","has_notes":false,"flag_type":1}