{"id":1265252759,"question_id":1019,"lang":"java","lang_name":"Java","time":"1Â month","timestamp":1716414288,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1265252759/","is_pending":"Not Pending","title":"Squares of a Sorted Array","memory":"46.1 MB","code":"class Solution {\n    public int[] sortedSquares(int[] nums) {\n        int n = nums.length;\n        int[] square = new int[n];\n        int[] res = new int[n];\n        int index = -1;\n        \n        while(index+1<n && nums[index+1]<0)\n            index++;\n        \n        for(int i=0;i<n;i++){\n            square[i] = nums[i]*nums[i];\n        }\n\n        int j = 0;\n        int k = index+1;\n        int i = index;\n\n        for(;j<n;j++){\n            if(i>=0 && k<n){\n                if(square[k]<square[i])\n                    res[j] = square[k++];\n                else\n                    res[j] = square[i--];\n            }else if(k<n){\n                res[j] = square[k++];    \n            }else if(i>=0){\n                res[j] = square[i--];\n            }\n        }\n        \n        return res;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"squares-of-a-sorted-array","has_notes":false,"flag_type":1}