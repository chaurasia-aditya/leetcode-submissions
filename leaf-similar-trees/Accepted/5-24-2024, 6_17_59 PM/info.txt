{"id":1267010667,"question_id":904,"lang":"java","lang_name":"Java","time":"1Â month","timestamp":1716589079,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1267010667/","is_pending":"Not Pending","title":"Leaf-Similar Trees","memory":"41.2 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean leafSimilar(TreeNode root1, TreeNode root2) {\n        List<Integer> leafValues1 = new ArrayList<>();\n        List<Integer> leafValues2 = new ArrayList<>();\n\n        leaf(root1, leafValues1);\n        leaf(root2, leafValues2);\n\n        return leafValues1.equals(leafValues2);\n    }\n\n    private void leaf(TreeNode node, List<Integer> leafValues) {\n        if (node == null) {\n            return;\n        }\n\n        if (node.left != null || node.right != null) {\n            leaf(node.left, leafValues);\n            leaf(node.right, leafValues);\n        } else {\n            leafValues.add(node.val);\n        }\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111","title_slug":"leaf-similar-trees","has_notes":false,"flag_type":1}