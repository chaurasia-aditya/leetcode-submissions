{"id":1270204224,"question_id":307,"lang":"java","lang_name":"Java","time":"4Â weeks","timestamp":1716883283,"status":10,"status_display":"Accepted","runtime":"93 ms","url":"/submissions/detail/1270204224/","is_pending":"Not Pending","title":"Range Sum Query - Mutable","memory":"76.1 MB","code":"class NumArray {\n    int[] tree;\n    int n;\n    \n    void buildTree(int[] nums) {\n        for (int i = 0; i < n; i++) {\n            tree[n + i] = nums[i];\n        }\n        for (int i = n - 1; i > 0; --i) {\n            tree[i] = tree[2*i] + tree[2*i + 1];\n        }\n    }    \n\n    public NumArray(int[] nums) {\n        n = nums.length;\n        tree = new int[2*n];\n        buildTree(nums);\n    }\n    \n    public void update(int index, int val) {\n        index += n;\n        tree[index] = val;\n        while (index > 0) {\n            int left = index;\n            int right = index;\n            if (index % 2 == 0) {\n                right = index + 1;\n            } else {\n                left = index - 1;\n            }\n            tree[index / 2] = tree[left] + tree[right];\n            index /= 2;\n        }\n    }\n    \n    public int sumRange(int left, int right) {\n        left += n;\n        right += n;\n        int sum = 0;\n        while (left <= right) {\n            if (left % 2 == 1) {\n                sum += tree[left];\n                left++;\n            }\n            if (right % 2 == 0) {\n                sum += tree[right];\n                right--;\n            }\n            left /= 2;\n            right /= 2;\n        }\n        return sum;\n    }\n}\n\n/**\n * Your NumArray object will be instantiated and called as such:\n * NumArray obj = new NumArray(nums);\n * obj.update(index,val);\n * int param_2 = obj.sumRange(left,right);\n */","compare_result":"1111111111111111","title_slug":"range-sum-query-mutable","has_notes":false,"flag_type":1}