{"id":1260023919,"question_id":232,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1715897852,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1260023919/","is_pending":"Not Pending","title":"Implement Queue using Stacks","memory":"41 MB","code":"class MyQueue {\n    Stack<Integer> st;\n    int size;\n    int first;\n    \n    public MyQueue() {\n        st = new Stack<>();\n        size = 0;    \n        first = 0;\n    }\n    \n    public void push(int x) {\n        st.push(x);\n        size++;\n        if(size == 1)\n            first = x;\n    }\n    \n    public int pop() {\n        Stack<Integer> temp = new Stack<>();\n        while(st.size()!=1)\n            temp.push(st.pop());\n        int ret = st.pop();\n        if(size != 1)\n            first = temp.peek();\n        else\n            first = 0;\n        \n        while(!temp.isEmpty()){\n            st.push(temp.pop());\n        }\n        size--;\n        return ret;\n    }\n    \n    public int peek() {\n        return first;\n    }\n    \n    public boolean empty() {\n        return size == 0;\n    }\n}\n\n/**\n * Your MyQueue object will be instantiated and called as such:\n * MyQueue obj = new MyQueue();\n * obj.push(x);\n * int param_2 = obj.pop();\n * int param_3 = obj.peek();\n * boolean param_4 = obj.empty();\n */","compare_result":"1111111111111111111111","title_slug":"implement-queue-using-stacks","has_notes":false,"flag_type":1}