{"id":1081078687,"question_id":3166,"lang":"java","lang_name":"Java","time":"8 months, 1 week","timestamp":1697948052,"status":10,"status_display":"Accepted","runtime":"27 ms","url":"/submissions/detail/1081078687/","is_pending":"Not Pending","title":"Minimum Number of Groups to Create a Valid Assignment","memory":"64 MB","code":"class Solution {\n    public int isPossible(int num, int div){\n        int rem = num%div; // c-a\n        int q = num/div; // a+b+c\n        \n        for(int i=0;div*i<=num;i++){\n            if((num-i*div)%(div+1) == 0){\n                return i+(num-i*div)/(div+1);\n            }\n        }\n        if(num%div == 0){\n            return num/div;\n        }\n        return -1;\n    }\n    private int canDivide(int n, int i) {\n        // Can divide int i and i + 1, which is prioritized.\n        int j = i + 1;\n        for (int x = 0; x * i <= n; x++) {\n            if ((n - x * i) % j == 0) {\n                return x + (n - x * i) / j;\n            }\n        }\n        \n        // Can divide just by i.\n        if (n % i == 0) return n / i;\n\n        return -1;\n    }\n    public int gcd(int a, int b)  \n    {  \n     return b == 0? a:gcd(b,a%b);     \n    }\n    public int minGroupsForValidAssignment(int[] nums) {\n        HashMap<Integer, Integer> hm = new HashMap<>();\n        int[] count = new int[nums.length];\n        int index = 0;\n        int min = Integer.MAX_VALUE;\n        for(int i=0;i<nums.length;i++){\n            int idx = hm.getOrDefault(nums[i],-1);\n            if(idx == -1){\n                hm.put(nums[i],index);\n                count[index]=1;\n                // idx = index;\n                index++;\n            }else{\n                count[idx]++;\n            }\n            // max = Math.max(max, count[idx]);\n        }\n        for(int i=0;i<index;i++){\n            min = Math.min(count[i], min);\n        }\n        \n        int low = 1, high = min;\n        int total;\n        for(int i = min;i>=1;i--){\n            total = 0;\n            for(int j=0;j<nums.length;j++){\n                int val = isPossible(count[j], i);\n                if(val == -1){\n                    total = -1;\n                    break;\n                }else{\n                    total+=val;\n                }\n            }\n            if(total!=-1){\n                return total;\n            }\n        }\n        return -1;\n    }\n}","compare_resulttitle_slug":"minimum-number-of-groups-to-create-a-valid-assignment","has_notes":false,"flag_type":1}