{"id":1284621102,"question_id":971,"lang":"java","lang_name":"Java","time":"2Â weeks","timestamp":1718089914,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/1284621102/","is_pending":"Not Pending","title":"Shortest Bridge","memory":"45.3 MB","code":"class Solution {\n    int[] dx = new int[]{0, 0, 1, -1};\n    int[] dy = new int[]{1, -1, 0, 0};\n\n    class Pair{\n        int i,j;\n\n        public Pair(int i, int j){\n            this.i = i;\n            this.j = j;\n        }\n    }\n    void dfs(int i, int j, int n, int[][] grid, Queue<Pair> q){\n        if(i<0 || i>=n || j<0 || j>=n || grid[i][j]!=1)\n            return;\n        \n        grid[i][j] = 2;\n        q.offer(new Pair(i, j));\n\n        dfs(i+1, j, n, grid, q);\n        dfs(i, j+1, n, grid, q);\n        dfs(i-1, j, n, grid, q);\n        dfs(i, j-1, n, grid, q);\n    }\n\n    public int shortestBridge(int[][] grid) {\n        int n = grid.length;\n        Queue<Pair> q = new LinkedList<>();\n        int x = 2;\n        int j;\n        for(int i=0;i<n;i++){\n            j=0;\n            for(;j<n;j++){\n                if(grid[i][j] == 1){\n                    dfs(i, j, n, grid, q);\n                    break;\n                }\n            }\n            if(j!=n)\n                break;\n        }\n\n        int count = 0;\n        int cur_i, cur_j, new_i, new_j;\n\n        while(!q.isEmpty()){\n            int size = q.size();\n            while(size-->0){\n                Pair cur = q.poll();\n                cur_i = cur.i;\n                cur_j = cur.j;\n\n                for(int i=0;i<4;i++){\n                    new_i = cur_i+dx[i];\n                    new_j = cur_j+dy[i];\n\n                    if(new_i>=0 && new_i<n && new_j>=0 && new_j<n){\n                        if(grid[new_i][new_j] == 0){\n                            q.add(new Pair(new_i, new_j));\n                            grid[new_i][new_j] = 2;\n                        }else if(grid[new_i][new_j] == 1){\n                            return count;\n                        }\n                    }\n                }\n            }\n            count++;\n        }\n        return count;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"shortest-bridge","has_notes":false,"flag_type":1}