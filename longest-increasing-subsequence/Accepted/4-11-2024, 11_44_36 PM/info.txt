{"id":1230022410,"question_id":300,"lang":"java","lang_name":"Java","time":"2 months, 2 weeks","timestamp":1712893476,"status":10,"status_display":"Accepted","runtime":"48 ms","url":"/submissions/detail/1230022410/","is_pending":"Not Pending","title":"Longest Increasing Subsequence","memory":"43.5 MB","code":"class Solution {\n    void print(int[] arr, int n){\n        for(int i=0;i<n;i++){\n            System.out.print(arr[i]+\" \");\n        }\n        System.out.println();\n    }\n    public int lengthOfLIS(int[] nums) {\n        int n = nums.length;\n        int[] dp = new int[n];\n        Arrays.fill(dp, 1);\n        int max = 1;\n        // print(dp,n);\n        for(int i=0;i<n-1;i++){\n            for(int j=i+1;j<n;j++){\n                dp[j] = nums[j]>nums[i]?Math.max(dp[j], dp[i]+1):dp[j];\n                max = Math.max(max, dp[j]);\n            }\n            // print(dp, n);\n        }\n\n        return max;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111","title_slug":"longest-increasing-subsequence","has_notes":false,"flag_type":1}