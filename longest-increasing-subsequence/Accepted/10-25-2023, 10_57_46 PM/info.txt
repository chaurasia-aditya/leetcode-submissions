{"id":1084278213,"question_id":300,"lang":"java","lang_name":"Java","time":"8Â months","timestamp":1698289066,"status":10,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/1084278213/","is_pending":"Not Pending","title":"Longest Increasing Subsequence","memory":"43.2 MB","code":"class Solution {\n    public int lengthOfLIS(int[] nums) {\n        // int[] lis = new int[nums.length];\n        // lis[0] = 1;\n        // int max = 1;\n        // for(int i=1;i<nums.length;i++){\n        //     lis[i] = 1;\n        //     for(int j=0;j<i;j++){\n        //         if(nums[i] > nums[j] && lis[i]<lis[j]+1){\n        //             lis[i] = lis[j]+1;\n        //         }\n        //     }\n        //     max = Math.max(max, lis[i]);\n        // }\n        // return max;\n\n        int n = nums.length;\n        List<Integer> res = new ArrayList<>();\n        int idx;\n        res.add(nums[0]);\n \n        for (int i = 1; i < n; i++) {\n            if (nums[i] > res.get(res.size() - 1)) {\n                res.add(nums[i]);\n            } else {\n                idx = Collections.binarySearch(res, nums[i]);\n                if (idx < 0) {\n                    idx = -(idx + 1);\n                }\n                res.set(idx, nums[i]);\n            }\n        }\n        return res.size();\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111","title_slug":"longest-increasing-subsequence","has_notes":false,"flag_type":1}