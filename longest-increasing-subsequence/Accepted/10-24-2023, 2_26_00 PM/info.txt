{"id":1083221204,"question_id":300,"lang":"java","lang_name":"Java","time":"8Â months","timestamp":1698171960,"status":10,"status_display":"Accepted","runtime":"49 ms","url":"/submissions/detail/1083221204/","is_pending":"Not Pending","title":"Longest Increasing Subsequence","memory":"43.6 MB","code":"class Solution {\n    public int lengthOfLIS(int[] nums) {\n        int[] lis = new int[nums.length];\n        lis[0] = 1;\n        int max = 1;\n        for(int i=1;i<nums.length;i++){\n            lis[i] = 1;\n            for(int j=0;j<i;j++){\n                if(nums[i] > nums[j] && lis[i]<lis[j]+1){\n                    lis[i] = lis[j]+1;\n                }\n            }\n            max = Math.max(max, lis[i]);\n        }\n        return max;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111","title_slug":"longest-increasing-subsequence","has_notes":false,"flag_type":1}