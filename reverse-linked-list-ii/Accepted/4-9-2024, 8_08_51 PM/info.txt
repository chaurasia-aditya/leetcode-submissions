{"id":1228100186,"question_id":92,"lang":"java","lang_name":"Java","time":"2 months, 2 weeks","timestamp":1712707731,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1228100186/","is_pending":"Not Pending","title":"Reverse Linked List II","memory":"41.4 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode reverseBetween(ListNode head, int left, int right) {\n        if(left == right || head == null)\n            return head;\n        ListNode prev = null, start = head, end = head, cur, last;\n        int swaps = right-left;\n\n        while(--left!=0){\n            prev = start;\n            start = start.next;\n        }\n        while(--right!=0){\n            end = end.next;\n        }\n        \n        last = end.next;\n        cur = start.next;\n\n        while(swaps-->0){\n            ListNode temp = cur.next;\n            if(prev == null){\n                cur.next = head;\n            }\n            else{\n                cur.next = prev.next;\n            }\n            start.next = temp;\n\n            if(prev == null){\n                head = cur;\n                // start = head;\n            }else{\n                prev.next = cur;\n            }\n            cur = start.next;\n        }\n        \n        return head;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111","title_slug":"reverse-linked-list-ii","has_notes":false,"flag_type":1}