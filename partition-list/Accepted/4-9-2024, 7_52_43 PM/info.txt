{"id":1228094352,"question_id":86,"lang":"java","lang_name":"Java","time":"2 months, 2 weeks","timestamp":1712706763,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1228094352/","is_pending":"Not Pending","title":"Partition List","memory":"42.2 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode partition(ListNode head, int x) {\n        ListNode res = null;\n        ListNode small = null, large = null;\n        ListNode cur = head;\n        while(cur!=null){\n            if(cur.val>=x){\n                if(large!=null){\n                    large.next = new ListNode(cur.val);\n                    large = large.next;\n                }else if(small!=null){\n                    small.next = new ListNode(cur.val);\n                    large = small.next;\n                }else{\n                    res = new ListNode(cur.val);\n                    large = res;\n                }\n            }else{\n                if(small!=null){\n                    ListNode temp = new ListNode(cur.val, small.next);\n                    small.next = temp;\n                    small = temp;\n                }else if(res!=null){\n                    ListNode temp = new ListNode(cur.val, res);\n                    res = temp;\n                    small = temp;\n                }else{\n                    res = new ListNode(cur.val);\n                    small = res;\n                }\n            }\n            cur = cur.next;\n        }\n\n        return res;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"partition-list","has_notes":false,"flag_type":1}