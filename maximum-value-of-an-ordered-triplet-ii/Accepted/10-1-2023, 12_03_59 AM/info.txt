{"id":1063691944,"question_id":3152,"lang":"java","lang_name":"Java","time":"8 months, 4 weeks","timestamp":1696133039,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/1063691944/","is_pending":"Not Pending","title":"Maximum Value of an Ordered Triplet II","memory":"59 MB","code":"class Solution {\n    public long maximumTripletValue(int[] nums) {        \n        int n = nums.length;\n        int[] maxFromRight = new int[n];\n        maxFromRight[n - 1] = nums[n - 1];\n\n        for (int i=n-2;i>=0;i--) {\n            maxFromRight[i] = Math.max(maxFromRight[i+1],nums[i]);\n        }\n\n        long maxTripletValue = 0;\n        int curMax = nums[0];\n\n        for (int i=0;i<n-1;i++) {\n            maxTripletValue = Math.max(maxTripletValue, (long)(curMax-nums[i])*maxFromRight[i + 1]);\n            curMax = Math.max(curMax, nums[i]);\n        }\n\n        return maxTripletValue;\n    }\n}","compare_resulttitle_slug":"maximum-value-of-an-ordered-triplet-ii","has_notes":false,"flag_type":1}