{"id":1271093531,"question_id":404,"lang":"java","lang_name":"Java","time":"3 weeks, 6 days","timestamp":1716961861,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1271093531/","is_pending":"Not Pending","title":"Sum of Left Leaves","memory":"41 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n\n    public int sumOfLeftLeaves(TreeNode cur) {\n        if(cur == null)\n            return 0;\n\n        int res = 0;\n\n        if(cur.left!=null){\n            if(cur.left.left == null && cur.left.right == null)\n                res+=cur.left.val;\n            else\n                res += sumOfLeftLeaves(cur.left);\n        }\n\n        if(cur.right!=null)\n            res+= sumOfLeftLeaves(cur.right);\n\n        return res;\n\n\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"sum-of-left-leaves","has_notes":false,"flag_type":1}