{"id":1271074200,"question_id":404,"lang":"java","lang_name":"Java","time":"3 weeks, 6 days","timestamp":1716960420,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1271074200/","is_pending":"Not Pending","title":"Sum of Left Leaves","memory":"41.4 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int sumOfLeftLeaves(TreeNode root) {\n        int res = 0;\n        \n        Queue<TreeNode> q = new LinkedList<>();\n        \n        q.offer(root);\n        \n        while(!q.isEmpty()){\n            int size = q.size();\n            \n            while(size-->0){\n                TreeNode cur = q.poll();\n                if(cur.left!=null){\n                    if(cur.left.left == null && cur.left.right == null)\n                        res+=cur.left.val;\n                    q.offer(cur.left);\n                }\n                if(cur.right!=null){\n                    q.offer(cur.right);\n                }\n            }\n        }\n        \n        return res;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"sum-of-left-leaves","has_notes":false,"flag_type":1}