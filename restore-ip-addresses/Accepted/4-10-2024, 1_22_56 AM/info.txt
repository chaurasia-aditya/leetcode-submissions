{"id":1228252669,"question_id":93,"lang":"java","lang_name":"Java","time":"2 months, 2 weeks","timestamp":1712726576,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/1228252669/","is_pending":"Not Pending","title":"Restore IP Addresses","memory":"44.2 MB","code":"class Solution {\n    void backtrack(int count, int index, StringBuilder sb, int n, List<String> res){\n        if(count == 3){\n            String ans = sb.toString();\n            String[] arr = ans.split(\"\\\\.\");\n            if(arr.length!=4){\n                return;\n            }\n            for(int i=0;i<4;i++){\n                if(arr[i].length()>3 || arr[i].length()==0 || Integer.parseInt(arr[i])>255 || (arr[3].charAt(0) == '0' && arr[3].length()!=1))\n                    return;\n            }\n            res.add(ans);\n            return;\n        }\n\n        for(int i = index;i<=index+3 && i<sb.length();i++){\n            if(sb.substring(index, i).startsWith(\"0\") && (i-index != 1))\n                continue;\n            sb.insert(i,'.');\n            backtrack(count+1, i+1, sb, n, res);\n            sb.deleteCharAt(i);\n        }\n    }\n    public List<String> restoreIpAddresses(String s) {\n        List<String> res = new ArrayList<>();\n\n        int[] pos = new int[4];\n        backtrack(0, 0, new StringBuilder(s), s.length(), res);\n\n        return res;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"restore-ip-addresses","has_notes":false,"flag_type":1}