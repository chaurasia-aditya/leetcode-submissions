{"id":1271103624,"question_id":789,"lang":"java","lang_name":"Java","time":"3 weeks, 6 days","timestamp":1716962603,"status":10,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/1271103624/","is_pending":"Not Pending","title":"Kth Largest Element in a Stream","memory":"46.7 MB","code":"class KthLargest {\n    int k;\n    PriorityQueue<Integer> pq;\n\n    public KthLargest(int k, int[] nums) {\n        this.k = k;\n        pq = new PriorityQueue<>(k, (a,b) -> (a-b));\n        \n        for(int i:nums){\n            if(pq.size() == k){ \n                if(pq.peek()<i){\n                    pq.poll();\n                    pq.add(i);\n                }\n            }else{\n                pq.add(i);\n            }\n        }\n    }\n    \n    public int add(int i) {\n        if(pq.size() == k){ \n            if(pq.peek()<i){\n                pq.poll();\n                pq.add(i);\n            }\n        }else{\n            pq.add(i);\n        }\n        return pq.peek();\n    }\n}\n\n/**\n * Your KthLargest object will be instantiated and called as such:\n * KthLargest obj = new KthLargest(k, nums);\n * int param_1 = obj.add(val);\n */","compare_result":"1111111111","title_slug":"kth-largest-element-in-a-stream","has_notes":false,"flag_type":1}