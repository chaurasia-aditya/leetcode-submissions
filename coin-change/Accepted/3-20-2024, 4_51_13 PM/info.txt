{"id":1209459511,"question_id":322,"lang":"java","lang_name":"Java","time":"3 months, 1 week","timestamp":1710967873,"status":10,"status_display":"Accepted","runtime":"17 ms","url":"/submissions/detail/1209459511/","is_pending":"Not Pending","title":"Coin Change","memory":"44.1 MB","code":"class Solution {\n    public int coinChange(int[] coins, int amount) {\n        if(amount == 0)\n            return 0;\n        \n        int n = coins.length;\n\n        int[] dp = new int[amount+1];\n        Arrays.fill(dp, Integer.MAX_VALUE);\n        dp[0] = 0;\n\n        for(int i=1;i<=amount;i++){\n            for(int j=0;j<n;j++){\n                if(coins[j]<=i && dp[i-coins[j]]!=Integer.MAX_VALUE)\n                    dp[i] = Math.min(1+dp[i-coins[j]], dp[i]);\n            }\n        }\n\n        return (dp[amount]==Integer.MAX_VALUE?-1:dp[amount]);\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"coin-change","has_notes":false,"flag_type":1}