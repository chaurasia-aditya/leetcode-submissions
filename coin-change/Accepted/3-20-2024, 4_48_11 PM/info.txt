{"id":1209457877,"question_id":322,"lang":"java","lang_name":"Java","time":"3 months, 1 week","timestamp":1710967691,"status":10,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/1209457877/","is_pending":"Not Pending","title":"Coin Change","memory":"44.3 MB","code":"class Solution {\n    int min = Integer.MAX_VALUE;\n    int recur(int left, int[] dp, int[] coins, int n){\n        if(left<0)\n            return Integer.MAX_VALUE;\n        else if(left==0){\n            return 0;\n        }\n\n        if(dp[left]!=-1)\n            return dp[left];\n\n        int cur_min = Integer.MAX_VALUE;\n\n        for(int i=0;i<n;i++){\n           int res = recur(left-coins[i], dp, coins, n);\n\n           if(res!=Integer.MAX_VALUE){\n                cur_min = Math.min(cur_min, res+1);\n           }\n        }\n        return dp[left]=cur_min;\n    }\n    public int coinChange(int[] coins, int amount) {\n        if(amount == 0)\n            return 0;\n        \n        int n = coins.length;\n\n        int[] dp = new int[amount+1];\n        Arrays.fill(dp, -1);\n        \n        int res = recur(amount, dp, coins, n);\n\n        return (res==Integer.MAX_VALUE?-1:res);\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"coin-change","has_notes":false,"flag_type":1}