{"id":1224424976,"question_id":225,"lang":"java","lang_name":"Java","time":"2 months, 3 weeks","timestamp":1712367255,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1224424976/","is_pending":"Not Pending","title":"Implement Stack using Queues","memory":"41.2 MB","code":"class MyStack {\n    Queue<Integer> f, s;\n    int top, size;\n    boolean second;\n    public MyStack() {\n        f = new LinkedList<>();\n        s = new LinkedList<>();\n        top = -1;\n        size = 0;\n    }\n    \n    public void push(int x) {\n        f.offer(x);\n        top = x;\n        size++;\n    }\n    \n    public int pop() {\n        int ret;\n\n        if(size == 1){\n            top = -1;\n            size--;\n            return f.remove();\n        }\n\n        while(f.size()>2){\n            s.offer(f.remove());\n        }\n        top = f.remove();\n        s.offer(top);\n        ret = f.remove();\n\n        Queue<Integer> temp = f;\n        f = s;\n        s = temp;\n\n        second = !second;\n        size--;\n        return ret;\n    }\n    \n    public int top() {\n        return top;\n    }\n    \n    public boolean empty() {\n        if(size == 0)\n            return true;\n        return false;\n    }\n}\n\n/**\n * Your MyStack object will be instantiated and called as such:\n * MyStack obj = new MyStack();\n * obj.push(x);\n * int param_2 = obj.pop();\n * int param_3 = obj.top();\n * boolean param_4 = obj.empty();\n */","compare_result":"111111111111111111","title_slug":"implement-stack-using-queues","has_notes":false,"flag_type":1}