{"id":1224424000,"question_id":225,"lang":"java","lang_name":"Java","time":"2 months, 3 weeks","timestamp":1712367088,"status":10,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/1224424000/","is_pending":"Not Pending","title":"Implement Stack using Queues","memory":"41.7 MB","code":"class MyStack {\n    Queue<Integer> q1, q2;\n    int top, size;\n    boolean second;\n    public MyStack() {\n        q1 = new LinkedList<>();\n        q2 = new LinkedList<>();\n        top = -1;\n        second = false;\n        size = 0;\n    }\n\n    private void print(){\n        int i=0;\n        System.out.println(\"Size = \"+size+\" top = \"+top+\" second = \"+second);\n        if(second){\n            System.out.println(q2);\n        }else{\n            System.out.println(q1);\n        }\n    }\n    \n    public void push(int x) {\n        if(second){\n            q2.offer(x);\n        }else{\n            q1.offer(x);\n        }\n        top = x;\n        size++;\n        // print();\n    }\n    \n    public int pop() {\n        int ret;\n\n        Queue<Integer> f = (second?q2:q1);\n        Queue<Integer> s = (second?q1:q2);\n\n        if(size == 1){\n            top = -1;\n            size--;\n            print();\n            return f.remove();\n        }\n\n        // if(size == 1){\n        //     if(second){\n        //         top = -1;\n        //         size--;\n        //         print();\n        //         return q2.remove();\n        //     }else{\n        //         top = -1;\n        //         size--;\n        //         print();\n        //         return q1.remove();\n        //     }\n        // }\n\n        while(f.size()>2){\n            s.offer(f.remove());\n        }\n        top = f.remove();\n        s.offer(top);\n        ret = f.remove();\n\n        // if(second){\n        //     while(q2.size() > 2){\n        //         q1.offer(q2.remove());\n        //     }\n        //     top = q2.remove();\n        //     q1.offer(top);\n        //     ret = q2.remove();\n        // }else{\n        //     while(q1.size() > 2){\n        //         q2.offer(q1.remove());\n        //     }\n        //     top = q1.remove();\n        //     q2.offer(top);\n        //     ret = q1.remove();\n        // }\n\n        second = !second;\n        size--;\n        // print();\n        return ret;\n    }\n    \n    public int top() {\n        return top;\n    }\n    \n    public boolean empty() {\n        if(size == 0)\n            return true;\n        return false;\n    }\n}\n\n/**\n * Your MyStack object will be instantiated and called as such:\n * MyStack obj = new MyStack();\n * obj.push(x);\n * int param_2 = obj.pop();\n * int param_3 = obj.top();\n * boolean param_4 = obj.empty();\n */","compare_result":"111111111111111111","title_slug":"implement-stack-using-queues","has_notes":false,"flag_type":1}