{"id":1016735355,"question_id":56,"lang":"java","lang_name":"Java","time":"10 months, 3 weeks","timestamp":1691597328,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/1016735355/","is_pending":"Not Pending","title":"Merge Intervals","memory":"45.1 MB","code":"class Solution {\n    public int[][] merge(int[][] intervals) {\n        if (intervals.length == 0) \n            return intervals;\n        \n        Arrays.sort(intervals, (a, b) -> a[0] - b[0]);\n        \n        List<int[]> res = new ArrayList<>();\n        res.add(intervals[0]);\n        \n        for(int i=1; i<intervals.length; i++) {\n            int[] cur = intervals[i];\n            int[] last = res.get(res.size() - 1);\n            if (cur[0] > last[1]) {\n                res.add(cur);\n            } else if (cur[1] > last[1]) {\n                last[1] = cur[1];\n            }\n        }\n        int[][] ret = new int[res.size()][2];\n        for(int i=0; i<res.size(); i++) {\n            ret[i] = res.get(i);\n        }\n        return ret;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-intervals","has_notes":false,"flag_type":1}