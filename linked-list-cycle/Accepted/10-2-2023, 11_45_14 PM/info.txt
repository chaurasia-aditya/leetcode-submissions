{"id":1065519975,"question_id":141,"lang":"java","lang_name":"Java","time":"8 months, 3 weeks","timestamp":1696304714,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1065519975/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"43.2 MB","code":"/**\n * Definition for singly-linked list.\n * class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) {\n *         val = x;\n *         next = null;\n *     }\n * }\n */\npublic class Solution {\n    public boolean hasCycle(ListNode head) {\n        if(head == null){\n            return false;\n        }\n        ListNode slow = head, fast = head.next;\n\n        while(slow!=null && fast!=null){\n            if(slow == fast){\n                return true;\n            }\n            slow = slow.next;\n            if(fast.next==null)\n                break;\n            fast = fast.next.next;\n        }\n        return false;\n    }\n}","compare_result":"11111111111111111111111","title_slug":"linked-list-cycle","has_notes":false,"flag_type":1}