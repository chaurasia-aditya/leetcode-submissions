{"id":946723222,"question_id":141,"lang":"java","lang_name":"Java","time":"1 year, 1 month","timestamp":1683562008,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/946723222/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"44.2 MB","code":"/**\n * Definition for singly-linked list.\n * class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) {\n *         val = x;\n *         next = null;\n *     }\n * }\n */\npublic class Solution {\n    public boolean hasCycle(ListNode head) {\n        if(head == null)\n            return false;\n        ListNode slow = head, fast = head.next;\n        while(slow!=null && fast!=null){\n           if(slow == fast){\n               return true;\n           }\n           slow = slow.next;\n           if(fast.next!=null)\n                fast = fast.next.next;\n            else\n                return false;\n        } \n        return false;\n    }\n}","compare_result":"11111111111111111111111","title_slug":"linked-list-cycle","has_notes":false,"flag_type":1}