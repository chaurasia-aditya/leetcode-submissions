{"id":1204708264,"question_id":141,"lang":"c","lang_name":"C","time":"3 months, 1 week","timestamp":1710532913,"status":10,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/1204708264/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"7.6 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     struct ListNode *next;\n * };\n */\nbool hasCycle(struct ListNode *head) {\n    if(head == NULL || head->next == NULL)\n        return false;\n    struct ListNode *slow = head, *fast = head;\n\n    while(fast!=NULL && fast->next!=NULL){\n        slow = slow->next;\n        fast = fast->next->next;\n        if(slow == fast)\n            return true;\n    }\n\n    return false;\n}","compare_result":"111111111111111111111111111","title_slug":"linked-list-cycle","has_notes":false,"flag_type":1}