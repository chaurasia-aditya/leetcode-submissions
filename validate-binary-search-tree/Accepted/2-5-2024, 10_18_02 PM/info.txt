{"id":1167390152,"question_id":98,"lang":"java","lang_name":"Java","time":"4 months, 2 weeks","timestamp":1707189482,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1167390152/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"43.2 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean dfs(TreeNode cur, long max, long min){\n        if(cur == null)\n            return true;\n        \n        return (cur.val<max) && (cur.val>min) && dfs(cur.left, cur.val, min) && dfs(cur.right, max, cur.val);\n    }\n    public boolean isValidBST(TreeNode root) {\n        return dfs(root, Long.MAX_VALUE, Long.MIN_VALUE);\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"validate-binary-search-tree","has_notes":false,"flag_type":1}