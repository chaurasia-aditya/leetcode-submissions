{"id":1273876978,"question_id":131,"lang":"java","lang_name":"Java","time":"3 weeks, 3 days","timestamp":1717221259,"status":10,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/1273876978/","is_pending":"Not Pending","title":"Palindrome Partitioning","memory":"57.1 MB","code":"class Solution {\n    boolean check(String str){\n        int i=0, j = str.length()-1;\n        while(i<j){\n            if(str.charAt(i)!=str.charAt(j))\n                return false;\n            i++;\n            j--;\n        }\n        return true;\n    }\n    void solve(int i, int n, String s, ArrayList<String> cur, List<List<String>> res){\n        if(i == n){\n            res.add(new ArrayList(cur));\n            return;\n        }\n\n        for(int j = i+1; j<=n;j++){\n            String sub = s.substring(i, j);\n            if(check(sub)){\n                cur.add(sub);\n                solve(j, n, s, cur, res);\n                cur.remove(cur.size()-1);\n            }\n        }\n    }\n    public List<List<String>> partition(String s) {\n        List<List<String>> res = new ArrayList<>();\n\n        solve(0, s.length(), s, new ArrayList<>(), res);\n\n        return res;\n    }\n}","compare_result":"11111111111111111111111111111111","title_slug":"palindrome-partitioning","has_notes":false,"flag_type":1}