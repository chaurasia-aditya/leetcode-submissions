{"id":1290619473,"question_id":416,"lang":"java","lang_name":"Java","time":"1Â week, 2Â days","timestamp":1718587412,"status":10,"status_display":"Accepted","runtime":"21 ms","url":"/submissions/detail/1290619473/","is_pending":"Not Pending","title":"Partition Equal Subset Sum","memory":"56.6 MB","code":"class Solution {\n    Boolean[][] memo;\n    boolean check(int in, int n, int[] nums, int target){\n        if(target == 0){\n            return true;\n        }\n        if(in >= n || target<0)\n            return false;\n        \n        if(memo[in][target]!=null)\n            return memo[in][target];\n        \n        return memo[in][target] = check(in+1, n, nums, target-nums[in]) || check(in+1, n, nums, target);\n    }\n\n    public boolean canPartition(int[] nums) {\n        int sum = 0;\n        for(int num:nums)\n            sum+=num;\n        if((sum&1) == 1)\n            return false;\n\n        memo = new Boolean[nums.length+1][sum/2+1];\n\n        return check(0, nums.length, nums, sum/2);\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"partition-equal-subset-sum","has_notes":false,"flag_type":1}