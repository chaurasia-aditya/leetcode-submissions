{"id":1086663485,"question_id":416,"lang":"java","lang_name":"Java","time":"8Â months","timestamp":1698565425,"status":10,"status_display":"Accepted","runtime":"21 ms","url":"/submissions/detail/1086663485/","is_pending":"Not Pending","title":"Partition Equal Subset Sum","memory":"56.9 MB","code":"class Solution {\n    int sum = 0;\n    boolean isPossible = false;\n    Boolean mem[][];\n    boolean dfs(int[] nums, int idx, int rem){\n        if(rem == 0){\n            return true;\n        }else if(idx == nums.length || rem<0){\n            return false;\n        }\n        if(mem[idx][rem]!=null)\n            return mem[idx][rem];\n        return mem[idx][rem] = dfs(nums, idx+1, rem-nums[idx]) || dfs(nums, idx+1, rem);\n    }\n    public boolean canPartition(int[] nums) {\n        for(int n:nums){\n            sum+=n;\n        }\n        if((sum&1)==1)\n            return false;\n        \n        mem = new Boolean[nums.length+1][sum/2+1];\n\n        return dfs(nums, 0, sum/2);\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"partition-equal-subset-sum","has_notes":false,"flag_type":1}