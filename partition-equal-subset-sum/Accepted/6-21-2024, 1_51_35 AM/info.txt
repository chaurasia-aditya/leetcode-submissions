{"id":1295295511,"question_id":416,"lang":"java","lang_name":"Java","time":"4Â days, 20Â hours","timestamp":1718949095,"status":10,"status_display":"Accepted","runtime":"23 ms","url":"/submissions/detail/1295295511/","is_pending":"Not Pending","title":"Partition Equal Subset Sum","memory":"57.5 MB","code":"class Solution {\n    Boolean[][] memo;\n    public boolean isPossible(int i, int n, int[] nums, int target){\n        if(target == 0)\n            return true;\n        \n        if(i>=n || target<0)\n            return false;\n\n        if(memo[i][target] != null)\n            return memo[i][target];\n        \n        return memo[i][target] = (isPossible(i+1, n, nums, target-nums[i])||isPossible(i+1, n, nums, target));\n    }\n\n    public boolean canPartition(int[] nums) {\n        int total = 0;\n\n        for(int num:nums)\n            total+=num;\n        \n        if((total&1)==1)\n            return false;\n        \n        memo = new Boolean[nums.length][total/2+1];\n        \n        return isPossible(0, nums.length, nums, total/2);\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"partition-equal-subset-sum","has_notes":false,"flag_type":1}