{"id":1075381921,"question_id":695,"lang":"java","lang_name":"Java","time":"8 months, 2 weeks","timestamp":1697329770,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/1075381921/","is_pending":"Not Pending","title":"Max Area of Island","memory":"43.1 MB","code":"class Solution {\n    int max = 0;\n\n    int dfs(int i, int j, int[][] grid, int n, int m){\n        if(i<0 || i>=n || j<0 || j>=m || grid[i][j] == 0)\n            return 0;    \n\n        grid[i][j] = 0;\n        return 1+dfs(i-1, j, grid, n, m)+dfs(i+1, j, grid, n, m)+dfs(i, j-1, grid, n, m)+dfs(i, j+1, grid, n, m);\n    }\n\n    public int maxAreaOfIsland(int[][] grid) {\n        int n = grid.length;\n        int m = grid[0].length;\n\n        boolean[][] visited = new boolean[n][m];\n\n        for(int i=0; i<n;i++){\n            for(int j=0;j<m;j++){\n                if(grid[i][j] == 1){\n                    max = Math.max(max, dfs(i, j, grid, n, m));\n                }\n            }\n        }\n        return max;\n    }\n}","compare_resulttitle_slug":"max-area-of-island","has_notes":false,"flag_type":1}