{"id":1063587128,"question_id":3154,"lang":"java","lang_name":"Java","time":"8 months, 4 weeks","timestamp":1696128204,"status":10,"status_display":"Accepted","runtime":"1669 ms","url":"/submissions/detail/1063587128/","is_pending":"Not Pending","title":"Maximum Value of an Ordered Triplet I","memory":"43.9 MB","code":"class Solution {\n    public long maximumTripletValue(int[] nums) {\n        // int[] max = new int[nums.length];\n        // int[] min = new int[nums.length];\n        // max[0] = Integer.MIN_VALUE;\n        // min[nums.length-1] = Integer.MAX_VALUE;\n        // for(int i=1;i<nums.length;i++){\n        //     max[i] = Math.max(max[i-1], nums[i]);\n        //     min[n-1-i] = Math.min(min[n-i], nums[n-i]);\n        // }\n        long res = Long.MIN_VALUE;\n        for(int i=0;i<nums.length-2;i++){\n            for(int j=i+1;j<nums.length-1;j++){\n                for(int k = j+1;k<nums.length;k++){\n                    System.out.println(\"Here\");\n                    res = Math.max(res, ((long)(nums[i] - nums[j])*nums[k]));\n                }\n            }\n        }\n        return res>=0?res:0;\n    }\n}","compare_resulttitle_slug":"maximum-value-of-an-ordered-triplet-i","has_notes":false,"flag_type":1}