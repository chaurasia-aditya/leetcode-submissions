{"id":1261035494,"question_id":22,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1716009339,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1261035494/","is_pending":"Not Pending","title":"Generate Parentheses","memory":"42.7 MB","code":"class Solution {\n    void generate(int open, int close, int n, StringBuilder sb, List<String> res){\n        if(open == n && close == n){\n            res.add(sb.toString());\n            return;\n        }\n        \n        if(open<n){\n            sb.append(\"(\");\n            generate(open+1, close, n, sb, res);\n            sb.deleteCharAt(open+close);\n        }\n        if(close<open){\n            sb.append(\")\");\n            generate(open, close+1, n, sb, res);\n            sb.deleteCharAt(open+close);\n        }\n    }\n    \n    public List<String> generateParenthesis(int n) {\n        List<String> res = new ArrayList<>();\n        \n        generate(0, 0, n, new StringBuilder(), res);\n        return res;\n    }\n}","compare_result":"11111111","title_slug":"generate-parentheses","has_notes":false,"flag_type":1}