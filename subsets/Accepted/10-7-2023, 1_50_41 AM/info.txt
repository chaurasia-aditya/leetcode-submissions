{"id":1069111011,"question_id":78,"lang":"java","lang_name":"Java","time":"8 months, 3 weeks","timestamp":1696657841,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1069111011/","is_pending":"Not Pending","title":"Subsets","memory":"41.7 MB","code":"class Solution {    \n    void getSub(ArrayList<Integer> cur, List<List<Integer>> res, int i, int[] nums){\n        if(i == nums.length){\n            res.add(new ArrayList<>(cur));\n            return;\n        }\n        cur.add(nums[i]);\n        getSub(cur, res, i+1, nums);\n        cur.remove(cur.size()-1);\n        getSub(cur, res, i+1, nums);\n    }\n\n    public List<List<Integer>> subsets(int[] nums) {      \n        List<List<Integer>> res= new ArrayList<>();\n        getSub(new ArrayList<Integer>(), res, 0, nums);\n        return res;\n    }\n\n    //  public List<List<Integer>> subsets(int[] nums) {\n    //     List<List<Integer>> result = new ArrayList<>();\n    //     List<Integer> temp = new ArrayList<>();\n    //     dfs(nums, result, 0, temp);\n    //     return result;\n    // }\n\n    // public void dfs(int[] nums, List<List<Integer>> result, int index, List<Integer> temp) {\n    //     result.add(new ArrayList<>(temp));\n\n    //     for (int i = index; i < nums.length; i++) {\n    //         List<Integer> newTemp = new ArrayList<>(temp);\n    //         newTemp.add(nums[i]);\n    //         dfs(nums, result, i+1, newTemp);\n    //     }\n    // }\n}","compare_result":"1111111111","title_slug":"subsets","has_notes":false,"flag_type":1}