{"id":1228054683,"question_id":528,"lang":"java","lang_name":"Java","time":"2 months, 2 weeks","timestamp":1712700623,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1228054683/","is_pending":"Not Pending","title":"Swapping Nodes in a Linked List","memory":"58.3 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode swapNodes(ListNode head, int k) {\n        ListNode start = null, end = null, cur = head;\n        int count=1;\n        \n        while(cur!=null){\n            if(end!=null){\n                end = end.next;\n            }\n            if(count == k){\n                end = head;\n                start = cur;\n            }\n            count++;\n            cur = cur.next;\n        }\n\n        int temp = start.val;\n        start.val = end.val;\n        end.val = temp;\n\n        return head;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"swapping-nodes-in-a-linked-list","has_notes":false,"flag_type":1}