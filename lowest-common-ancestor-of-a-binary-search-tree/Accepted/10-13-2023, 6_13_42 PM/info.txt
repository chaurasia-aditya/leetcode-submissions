{"id":1074585221,"question_id":235,"lang":"java","lang_name":"Java","time":"8 months, 2 weeks","timestamp":1697235222,"status":10,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/1074585221/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Search Tree","memory":"43.8 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\n\nclass Solution {\n    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {\n        while((long)(root.val - p.val) * (long)(root.val - q.val) > 0){\n            if(root.val>p.val){\n                root = root.left;\n            }else{\n                root = root.right;\n            }\n        }   \n        return root;\n    }\n}","compare_result":"111111111111111111111111111111","title_slug":"lowest-common-ancestor-of-a-binary-search-tree","has_notes":false,"flag_type":1}