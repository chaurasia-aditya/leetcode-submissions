{"id":1074582599,"question_id":110,"lang":"java","lang_name":"Java","time":"8 months, 2 weeks","timestamp":1697234791,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1074582599/","is_pending":"Not Pending","title":"Balanced Binary Tree","memory":"43.3 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    boolean balanced = true;\n    int helper(TreeNode cur){\n        if(cur == null)\n            return 0;\n        \n        int left = 1+helper(cur.left);\n        int right = 1+helper(cur.right);\n\n        if(balanced && Math.abs(left-right)>1)\n            balanced = false;\n\n        return Math.max(left, right);\n    }\n    public boolean isBalanced(TreeNode root) {\n        helper(root);\n        return balanced;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"balanced-binary-tree","has_notes":false,"flag_type":1}