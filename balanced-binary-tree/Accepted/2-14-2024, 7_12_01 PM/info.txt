{"id":1175555900,"question_id":110,"lang":"cpp","lang_name":"C++","time":"4 months, 1 week","timestamp":1707955921,"status":10,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/1175555900/","is_pending":"Not Pending","title":"Balanced Binary Tree","memory":"21.6 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\n    bool balanced = true;\npublic:\n    int check(TreeNode* cur){\n        if(cur == nullptr){\n            return 0;\n        }\n        int left = 1+check(cur->left);\n        int right = 1+check(cur->right);\n\n        if((balanced==true) && (abs(left-right)>1)){\n            balanced = false;\n        }\n\n        return max(left, right);\n    }\n    bool isBalanced(TreeNode* root) {\n        check(root);\n\n        return balanced;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"balanced-binary-tree","has_notes":false,"flag_type":1}