{"id":1261957387,"question_id":1095,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1716097941,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1261957387/","is_pending":"Not Pending","title":"Two City Scheduling","memory":"41.2 MB","code":"class Solution {\n    public int twoCitySchedCost(int[][] costs) {\n        int n = costs.length/2;\n        int[] refund = new int[2*n];\n        \n        int min = 0, index = 0;\n        \n        for(int[] cost : costs){\n            refund[index++] = cost[1] - cost[0];\n            min += cost[0];\n        }\n        \n        Arrays.sort(refund);\n        \n        for(int i = 0; i < n; i++){\n            min += refund[i];\n        }\n        return min;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111","title_slug":"two-city-scheduling","has_notes":false,"flag_type":1}