{"id":1069174519,"question_id":39,"lang":"java","lang_name":"Java","time":"8 months, 3 weeks","timestamp":1696664856,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/1069174519/","is_pending":"Not Pending","title":"Combination Sum","memory":"43.6 MB","code":"class Solution {\n    void helper(int index, ArrayList<Integer> cur, List<List<Integer>> res, int left, int[]candidates){\n        if(left == 0){\n            res.add(new ArrayList<>(cur));\n            return;\n        }\n        if(left<0){\n            return;\n        }\n        for(int i=index;i<candidates.length;i++){\n            cur.add(candidates[i]);\n            helper(i, cur, res, left - candidates[i], candidates);\n            cur.remove(cur.size()-1);\n        }\n    }\n    public List<List<Integer>> combinationSum(int[] candidates, int target) {\n        List<List<Integer>> res = new ArrayList<>();\n        Arrays.sort(candidates);\n        helper(0, new ArrayList<>(), res, target, candidates);\n        return res;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"combination-sum","has_notes":false,"flag_type":1}