{"id":1055957938,"question_id":74,"lang":"java","lang_name":"Java","time":"9 months, 1 week","timestamp":1695355427,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1055957938/","is_pending":"Not Pending","title":"Search a 2D Matrix","memory":"41.4 MB","code":"class Solution {\n    public boolean searchMatrix(int[][] matrix, int target) {\n        int m = matrix.length;\n        int n = matrix[0].length;\n        int low = 0, high = m*n-1;\n        int mid, row, col;\n        while(low<=high){\n            mid = low+(high - low)/2;\n            row = mid/n;\n            col = (mid)%n;\n            if(matrix[row][col]>target){\n                high = mid-1;\n            }else if(matrix[row][col]<target){\n                low = mid+1;\n            }else{\n                return true;\n            }\n        }\n        return false;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"search-a-2d-matrix","has_notes":false,"flag_type":1}