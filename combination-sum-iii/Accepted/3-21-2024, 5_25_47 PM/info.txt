{"id":1210369589,"question_id":216,"lang":"java","lang_name":"Java","time":"3Â months","timestamp":1711056347,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1210369589/","is_pending":"Not Pending","title":"Combination Sum III","memory":"41.2 MB","code":"class Solution {\n    public void backtrack(int target, int i, int count,  List<Integer> l, List<List<Integer>> res){\n        if(target == 0){\n            if(count == 0){\n                res.add(new ArrayList<>(l));\n                return;\n            }else{ \n                return;\n            }\n        }\n\n        if(target<0 || i==10 || count<0)\n            return;\n\n        if(i <= target){\n            l.add(i);\n            backtrack(target-i, i+1, count-1, l, res);\n            l.remove(l.size()-1);\n        }\n        backtrack(target, i+1, count, l, res);\n    }\n    public List<List<Integer>> combinationSum3(int k, int target) {\n        List<List<Integer>> res = new ArrayList<>();\n\n        backtrack(target, 1, k, new ArrayList<Integer>(), res);\n\n        return res;\n    }\n}","compare_result":"111111111111111111","title_slug":"combination-sum-iii","has_notes":false,"flag_type":1}