{"id":1209595791,"question_id":518,"lang":"java","lang_name":"Java","time":"3 months, 1 week","timestamp":1710985569,"status":10,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/1209595791/","is_pending":"Not Pending","title":"Coin Change II","memory":"48.1 MB","code":"class Solution {\n\n    int recur(int i, int target, int[][] dp, int[] coins, int n){\n        if(target == 0){\n            return 1;\n        }\n\n        if(i<n){\n            if(dp[i][target] == -1){\n                if(coins[i]>target)\n                    return 0;\n                return dp[i][target] = recur(i, target-coins[i], dp, coins, n) + recur(i+1, target, dp, coins, n);\n            }\n            return dp[i][target];\n        }\n\n        return 0;\n    }\n\n    public int change(int amount, int[] coins) {\n        int n = coins.length;\n        Arrays.sort(coins);\n\n        int[][] dp = new int [n][amount+1];\n        for(int i=0;i<n;i++)\n            Arrays.fill(dp[i], -1);    \n        \n        \n\n        return recur(0, amount, dp, coins, n);\n    }\n}","compare_result":"1111111111111111111111111111","title_slug":"coin-change-ii","has_notes":false,"flag_type":1}